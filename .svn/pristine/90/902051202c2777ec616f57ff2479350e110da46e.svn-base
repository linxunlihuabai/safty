<template>
  <div class="app-container">
    <div class="home-workbench">
      <div class="home-common">
        <panel-group @handleSetLineChartData="handleSetLineChartData" />
      </div>
      <div class="news">
        <el-row
          :gutter="30"
          justify="space-between"
          type="flex"
        >
          <el-col :span="18">
            <transaction-table height="480px" />
          </el-col>
          <el-col :span="6">
            <todo-list />
          </el-col>
        </el-row>
        <el-row
          :gutter="30"
          justify="space-between"
          type="flex"
        >
          <el-col :span="18">
            <hidden-table
              type="tabs"
              :tag-type="'success'"
              :data="list1"
              height="600px"
            />
          </el-col>
          <el-col :span="6">
            <div class="chart-wrapper">
              <referer-website />
            </div>
          </el-col>
        </el-row>
        <el-row
          :gutter="30"
          justify="space-between"
          type="flex"
        >
          <el-col :span="18">
            <div class="chart-wrapper">
              <hidden-danger-trend />
            </div>

          </el-col>
          <el-col :span="6">
            <div class="chart-wrapper">
              <world-total-population />
            </div>
          </el-col>
        </el-row>

      </div>
    </div>
  </div>
</template>

<script>
import PanelGroup from './components/PanelGroup'
import hiddenDangerTrend from './components/hiddenDangerTrend'
import RefererWebsite from './components/RefererWebsite'
import WorldTotalPopulation from './components/WorldTotalPopulation'
import TransactionTable from './components/Tables/TransactionTable'
import HiddenTable from './components/Tables/HiddenTable'
import TodoList from './components/TodoList'

import {
  getNoticeList
} from '@/api/messageNotify/notice'

export default {
  components: {
    PanelGroup,
    hiddenDangerTrend,
    RefererWebsite,
    WorldTotalPopulation,
    TransactionTable,
    HiddenTable,
    TodoList
  },
  data() {
    return {
      list: [
        {
          id: 0,
          title: '公告',
          showHeader: false,
          data: [],
          columns: [
            {
              prop: 'title' // <String>  对应属性名
            },
            {
              prop: 'enterpriseName' // <String>  对应属性名
            },
            {
              prop: 'createdate', // <String>  对应属性名
              align: 'right', // <String> 内容对齐方式
              slot: true,
              width: 100 // <String,Number> 列宽
            }
          ],
          pagination: {
            cpage: 1,
            pageSize: 7,
            total: 0,
            layout: 'total, prev, pager, next'
          }
        },
        {
          id: 1,
          title: '最近动态',
          tagType: 'success',
          border: true,
          data: [
            {
              title: '庆祝新中国成立70周年大型成就展网上展馆',
              time: '2019-07-17'
            },
            {
              title: '关于举办地质灾害防灾减灾及救灾能力建设高级研修班的函 高级研修班的函 ',
              time: '2019-12-18 '
            },
            {
              title: '用于多选表格，切换所有行的选中状态',
              time: '2019-12-18 '
            },
            {
              title: '用于单选表格，设定某一行为选中行，如果调用时不加参数，则会取消目前高亮行的选中状态',
              time: '2019-12-18 '
            },
            {
              title: '关于举办地质灾害防灾减灾及救灾能力建设高级研修班的函 高级研修班的函 ',
              time: '2019-12-18 '
            },
            {
              title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
              time: '2019-12-18 '
            },
            {
              title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
              time: '2019-12-18 '
            },
            {
              title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
              time: '2019-12-18 '
            },
            {
              title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
              time: '2019-12-18 '
            },
            {
              title: '不传入参数时用于清空所有过滤条件，数据会恢复成未过',
              time: '2019-07-17 '
            }
          ],
          length: 8,
          columns: [
            {

              prop: 'title', // <String>  对应属性名
              label: '标题' // <String>   表头标签
            },
            {

              prop: 'time', // <String>  对应属性名
              label: '时间', // <String>   表头标签
              align: 'center', // <String> 内容对齐方式
              width: 100 // <String,Number> 列宽
            }
          ]
        }
      ],

      list1: [{
        id: 0,
        title: '隐患情况',
        border: true,
        data: [
          {
            title: '庆祝新中国',
            number: 1,
            state: '1',
            time: '2019-07-17'
          },
          {
            title: '关于举办',
            number: 1,
            state: '2',
            time: '2019-12-18 '
          },
          {
            title: '用于多',
            number: 1,
            state: '3',
            time: '2019-12-18 '
          },
          {
            title: '用于单选表',
            number: 1,
            state: '4',
            time: '2019-12-18 '
          },
          {
            title: '高级研修班',
            number: 1,
            state: '2',
            time: '2019-12-18 '
          },
          {
            title: '素由隐藏切换 ',
            number: 1,
            state: '3',
            time: '2019-12-18 '
          },
          {
            title: '对隐藏切换 ',
            number: 1,
            state: '1',
            time: '2019-12-18 '
          },
          {
            title: '素由隐藏切换 ',
            number: 1,
            state: '2',
            time: '2019-12-18 '
          },
          {
            title: '对隐藏切换 ',
            number: 1,
            state: '2',
            time: '2019-12-18 '
          },
          {
            title: '当其祖切换 ',
            number: 1,
            state: '3',
            time: '2019-12-18 '
          }
        ],
        length: 8,
        columns: [
          {
            prop: 'title', // <String>  对应属性名
            label: '项目名称', // <String>   表头标签
            align: 'center' // <String> 内容对齐方式
          },
          {
            prop: 'number', // <String>  对应属性名
            label: '隐患数量', // <String>   表头标签
            align: 'center' // <String> 内容对齐方式
          },
          {

            prop: 'state', // <String>  对应属性名
            label: '状态', // <String>   表头标签
            slot: true,
            align: 'center' // <String> 内容对齐方式
          },
          {
            prop: 'time', // <String>  对应属性名
            label: '时间', // <String>   表头标签
            align: 'center' // <String> 内容对齐方式
          }
        ]
      }],

      handlePanelGroup: {
        monitor: () => {
          window.open('http://demo.easynvr.com:10800/#/index/icons')
        },
        messages: () => {
          this.$router.push('/messageNotify/inBox')
        },
        file: () => {
          this.$router.push('/home/myFile')
        },
        purchases: {
          expectedData: [80, 100, 121, 104, 105, 90, 100],
          actualData: [120, 90, 100, 138, 142, 130, 130]
        },
        shoppings: {
          expectedData: [130, 140, 141, 142, 145, 150, 160],
          actualData: [120, 82, 91, 154, 162, 140, 130]
        }
      }

    }
  },
  created() {
    // this.fetchNoticeList()
  },
  methods: {
    fetchNoticeList(cpage, pageSize) {
      const params = {}
      // params.page = cpage || this.pagination.cpage
      // params.size = pageSize || this.pagination.pageSize
      params.page = 1
      params.size = 7
      getNoticeList(params).then(res => {
        const pageObj = res.data.obj

        this.list[0].pagination.total = pageObj.total

        const list = pageObj.list
        this.list[0].data = list
        console.log(list)

        // this.table = list

        this.tableDataLoading = false
      })
    },
    handleSetLineChartData(type) {
      this.handlePanelGroup[type]()
    }
  }
}
</script>

<style lang="scss" scoped>
.test-img {
  display: block;
  width: 100%;
  height: 100%;
  // height: auto;
}
.chart-wrapper {
  background: #fff;
  padding: 0;
  margin-bottom: 32px;
  .chart {
    padding: 16px;
  }
}
</style>

