<template>
  <div class="app-container">
    <div class="panel">
      <div class="panel-title">
        <breadcrumb class="breadcrumb-container" />
      </div>
      <el-row type="flex" justify="space-between" align="top">

        <el-button
          type="primary"
          size="small"
          icon="el-icon-plus"
          @click="addform"
        >
          新增
        </el-button>

        <div>
          <el-autocomplete
            v-model="searchTemp"
            size="small"
            :fetch-suggestions="querySearch"
            placeholder="请输入内容"
            style="width:180px;margin-right:10px"
            :trigger-on-focus="false"
            @select="handleSelect"
          />

          <el-button type="primary" icon="el-icon-search" size="small" @click="onSearch">查询</el-button>
        </div>
      </el-row>
      <el-row>
        <el-col>
          <!-- v-loading="listLoading" -->
          <!-- 隐患整体 -->
          <el-table ref="table" class="open-table" border :data="tableData" size="small" stripe>
            <!-- 隐患整体详情展示 -->
            <el-table-column type="expand">
              <template slot-scope="props">
                <!-- 使用情况 -->
                <el-table
                  :data="workable"
                  border
                  style="width: 100%"
                  class="inner-table usage"
                >
                  <el-table-column
                    prop="date"
                    label="使用情况"
                    align="center"
                  >
                    <template slot="header" slot-scope="scope">
                      <el-row class="slot-header">
                        <el-col>
                          整改落实情况
                        </el-col>
                        <el-col class="operation-group">
                          <el-button-group class="operate">
                            <el-button size="mini" type="text" icon="el-icon-edit" />
                            <el-button size="mini" type="text" icon="el-icon-delete" />
                          </el-button-group>
                        </el-col>
                      </el-row>
                    </template>
                    <el-table-column
                      prop="measures"
                      label="整改措施"
                    />
                    <el-table-column
                      prop="responsiblePerson"
                      label="责任人"
                    />
                    <el-table-column
                      prop="isMain"
                      label="时限"
                    />
                    <el-table-column
                      prop="cost"
                      label="费用"
                    />
                    <el-table-column
                      prop="plan"
                      label="整改预案"
                    />
                  </el-table-column>

                </el-table>
                <!-- 整改验收 -->
                <el-table
                  :data="workable"
                  border
                  style="width: 100%"
                  class="inner-table usage"
                >
                  <el-table-column
                    prop="date"
                    label="使用情况"
                    align="center"
                  >
                    <template slot="header" slot-scope="scope">
                      <el-row class="slot-header">
                        <el-col>
                          整改验收
                        </el-col>
                        <el-col class="operation-group">
                          <el-button-group class="operate">
                            <el-button size="mini" type="text" icon="el-icon-edit" />
                            <el-button size="mini" type="text" icon="el-icon-delete" />
                          </el-button-group>
                        </el-col>
                      </el-row>
                    </template>
                    <el-table-column
                      prop="measures"
                      label="验收负责人"
                    />
                    <el-table-column
                      prop="isMain"
                      label="完成整改时间"
                    />
                    <el-table-column
                      prop="isMain"
                      label="验收时间"
                    />
                    <el-table-column label="照片" width="80">
                      <template slot-scope="scope">
                        <el-button-group class="operate">
                          <el-button type="text" size="mini" icon="el-icon-search" @click="viewPics(scope.row.qualificationScanFiles)" />
                        </el-button-group>
                      </template>
                    </el-table-column>
                  </el-table-column>

                </el-table>
              </template>
            </el-table-column>

            <el-table-column prop="isMain" label="主要隐患">
              <template slot-scope="scope">
                <el-tag v-if="scope.row.isMain==='是'">主要隐患</el-tag>
                <el-tag v-else type="info">普通隐患</el-tag>
              </template>
            </el-table-column>

            <el-table-column prop="realm" label="排查领域" />

            <el-table-column prop="model" label="整改方式" />

            <el-table-column prop="part" label="隐患部位" />
            <el-table-column prop="content" label="隐患内容" />
            <el-table-column label="照片" width="80">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-button type="text" size="mini" icon="el-icon-search" @click="viewPics(scope.row.qualificationScanFiles)" />
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="登记" width="80">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-button
                    type="text"
                    size="mini"
                    @click="rectification(scope)"
                  >
                    整改
                  </el-button>
                  <el-button
                    type="text"
                    size="mini"
                    @click="acceptance(scope)"
                  >
                    验收
                  </el-button>
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="操作" width="120">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-button type="text" size="mini" icon="el-icon-edit" @click="editItem(scope)" />
                  <el-button type="text" size="mini" icon="el-icon-delete" @click="delItem(scope)" />
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="历史修改" width="80">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-button
                    type="text"
                    size="mini"
                    icon="el-icon-view"
                    @click="history(scope)"
                  />
                </el-button-group>
              </template>
            </el-table-column>
          </el-table>
        </el-col>
      </el-row>
      <!-- 分页栏 -->

      <el-row ref="page">
        <!-- 分页栏 -->
        <el-pagination
          :current-page.sync="cpage"
          :page-sizes="[5, 10, 15, 20]"
          :page-size.sync="pageSize"
          layout="sizes, prev, pager, next"
          :total="total"
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
        />
      </el-row>
      <!-- 弹出添加窗口 -->

      <!-- 登记表 -->
      <el-dialog
        title="添加"
        :visible.sync="formDialog"
        width="60%"
        :close-on-click-modal="false"
        @closed="handleDialogClosed('form')"
      >

        <el-form
          id="addData"
          ref="form"
          size="small"
          :model="form"
          :rules="formRules"
          label-width="130px"
        >

          <el-form-item label="检查编号" prop="realm">
            <sun-select :module="'排查领域'" :value.sync="form.realm" />
          </el-form-item>

          <el-form-item label="排查领域" prop="realm">
            <sun-select :module="'排查领域'" :value.sync="form.realm" />
          </el-form-item>

          <el-form-item label="主要隐患" prop="isMain">
            <el-radio v-model="form.isMain" label="是">是</el-radio>
            <el-radio v-model="form.isMain" label="否">否</el-radio>
          </el-form-item>

          <el-form-item label="整改方式" prop="model">
            <el-radio v-model="form.model" label="立即整改">立即整改</el-radio>
            <el-radio v-model="form.model" label="限期整改">限期整改</el-radio>
          </el-form-item>

          <el-form-item label="隐患部位" prop="part">
            <el-input v-model="form.part" />
          </el-form-item>

          <el-form-item label="隐患内容" prop="content">
            <el-input
              v-model="form.content"
              type="textarea"
              :autosize="{ minRows: 2, maxRows: 4}"
              placeholder="请输入内容"
            />
          </el-form-item>

          <el-form-item label="隐患照片" prop="qualificationScanFiles">
            <sun-upload
              ref="UPLOAD"
              :data="GLOBAL.FILE_TYPE.OTHER"
              :action="GLOBAL.FILE_API"
              :on-progress="handleProgress"
              :on-success="handleSuccess"
              :file-list="form.files"
              :multiple="true"
            />
          </el-form-item>

        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button @click="handleDialogClosed('form')">取 消</el-button>
          <el-button type="primary" :loading="btnLoading" @click="formSubmit">{{ handle }}</el-button>
        </div>
      </el-dialog>
    </div>
    <!-- 用于预览上传多张图片的dialog -->
    <pic-dialog :dialog-view-pics.sync="dialogViewPics" :pic-list="fileList" />
    <!-- 用于查看历史记录的dialog -->
    <el-dialog title="历史记录" :visible.sync="historyDialog" :close-on-click-modal="false" width="72%">
      <el-table ref="table" border :data="historyTable" size="small" stripe>
        <!-- 历史记录详情展示 -->
        <el-table-column prop="realm" label="排查领域" />
        <el-table-column prop="part" label="隐患部位" />
        <el-table-column prop="model" label="整改方式" />
        <el-table-column prop="isMain" label="主要隐患">
          <template slot-scope="scope">
            <span>{{ scope.row.isMain[0] }}</span>
            <i class="el-icon-minus" />
            <span>{{ scope.row.isMain[1] }}</span>
          </template>
        </el-table-column>
        <el-table-column prop="content" label="隐患内容" />
        <el-table-column label="项目照片">
          <template slot-scope="scope">
            <el-button-group>
              <el-button type="primary" size="mini" icon="el-icon-search" @click="viewPics(scope.row.qualificationScanFiles)">查看项目照片</el-button>
            </el-button-group>
          </template>
        </el-table-column>
        <el-table-column prop="operatorName" label="操作人" />
        <el-table-column prop="updateTime" label="操作时间" />
      </el-table>
    </el-dialog>
  </div>
</template>

<script>
import { mapGetters } from 'vuex'
import {
  getHiddenDangerList,
  addHiddenDangerStep1,
  addHiddenDangerStep2,
  addHiddenDangerStep3,
  addHiddenDangerStep4,
  addHiddenDangerNoPass,
  deleteHiddenDanger,
  historyHiddenDanger
} from '@/api/safetyInspection/overallSituation'
import {
  getSafetyChecksList
} from '@/api/safetyInspection/overallSituation' // 获取检查编号列表
export default {
  data() {
    return {
      handle: '', // 处理方式
      search: '',
      searchTemp: '',
      form: {
        realm: '', // 排查领域
        part: '', // 隐患部位
        model: '', // 整改方式
        isMain: '', // 是否是主要隐患
        content: '', // 隐患内容
        qualificationScanFiles: []
      },
      // 验证规则
      formRules: {
        realm: [
          { required: true, message: '请输入排查领域', trigger: 'blur' }
        ],
        part: [
          { required: true, message: '请输入隐患部位', trigger: 'blur' }
        ],
        model: [
          { required: true, message: '请输入整改方式', trigger: 'blur' }
        ],
        isMain: [
          { required: true, message: '请选择有效期', trigger: 'blur' }
        ],
        content: [
          { required: true, message: '请输入隐患内容', trigger: 'blur' }
        ],
        qualificationScanFiles: [
          { required: true, message: '请上传文件', trigger: 'change' }
        ]
      },
      formDialog: false, // 弹出框标志
      table: [],
      cpage: 1,
      pageSize: 5,
      total: 0,
      fileList: [], // 文件列表
      dialogViewPic: false,
      dialogViewPics: false,
      btnLoading: false,
      historyDialog: false,
      historyTable: [], // 历史记录
      workable: [{
        measures: '这是一个措施',
        responsiblePerson: '张三',
        isMain: '2019-2-18',
        cost: '500000元',
        plan: '一段文字'
      }] // 整改落实情况
    }
  },
  computed: {
    ...mapGetters([
      'enterprise_options' // 企业名称
    ]
    ),
    tableData() {
      const search = this.search
      return this.fuzzySearch(this.table, search, 'realm')
    },
    queryList() {
      return this.table.map(data => {
        return { value: data.realm }
      })
    }
  },
  watch: {
    searchTemp(val) {
      if (!val) {
        this.search = ''
      }
    }
  },
  created() {
    // console.log(this)
    getSafetyChecksList().then(res => {
      console.log(res)
    })
  },
  methods: {
    // 动态分页查询企业项目信息
    fetchList(cpage, pageSize) {
      const params = {}
      params.page = cpage || this.cpage
      params.size = pageSize || this.pageSize
      getQualificationList(params)
        .then(res => {
          const pageObj = res.data.obj
          this.total = pageObj.total
          // 改造时间戳
          const list = pageObj.list.map((item) => {
            let startTime = item.qualificationValidityStartTime
            let endTime = item.qualificationValidityEndTime
            item.qualificationValidityStartTime = this.parseTime(startTime, '{y}-{m}-{d}')
            item.qualificationValidityEndTime = this.parseTime(endTime, '{y}-{m}-{d}')
            startTime = this.parseTime(startTime, '{y}-{m}-{d}')
            endTime = this.parseTime(endTime, '{y}-{m}-{d}')
            item.isMain = [startTime, endTime]
            return item
          })
          console.log(list)
          this.table = list
        }).catch(() => {})
    },
    // 过滤表格
    onSearch() {
      this.search = this.searchTemp
    },
    querySearch(queryString, cb) {
      var results = this.fuzzySearch(this.queryList, queryString, 'value')
      // 调用 callback 返回建议列表的数据
      cb(results)
    },
    handleSelect() {
      this.onSearch()
    },
    // 查看照片
    viewPics(fileList) {
      fileList = fileList.map(item => {
        item.url = process.env.VUE_APP_BASE_API + item.url
        return item
      })
      console.log(fileList)
      this.dialogViewPics = true
      this.fileList = fileList
    },
    // 添加按钮
    addform() {
      this.formDialog = true
      this.handle = '添加'
    },
    // 提交日常登记表
    formSubmit() {
      this.$refs.form.validate((valid) => {
        if (valid) {
          const params = this.depClone(this.form)
          // 改造起始时间
          params.qualificationValidityStartTime = params.isMain[0]
          params.qualificationValidityEndTime = params.isMain[1]
          params.fileIds = params.qualificationScanFiles.map(item => {
            if (item.response) {
              return item.response.obj.fileId
            } else {
              return item.fileId
            }
          })
          if (this.handle === '添加') {
            addQualification(params).then(res => {
              this.formDialog = false
              this.fetchList()
            })
          } else if (this.handle === '修改') {
            updateQualification(params.id, params).then((res) => {
              this.formDialog = false
              this.fetchList()
            })
          }
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    // 编辑单行表格
    editItem(scope) {
      this.formDialog = true
      this.handle = '修改'
      this.$nextTick(() => {
        this.form = { ...scope.row }
      })
    },
    // 删除
    delItem(scope) {
      this.handleCofirm('你确定要删除么？', 'warning')
        .then(() => {
          deleteQualification(scope.row.id).then((res) => {
            this.tableData.splice(scope.$index, 1)
          })

          console.log(scope)
        })
    },
    // 查看历史修改
    history(scope) {
      historyQualification(scope.row.id).then((res) => {
        this.historyTable = res.data.obj
        this.historyTable = this.historyTable.map((item) => {
          // 改造起止时间
          let startTime = item.qualificationValidityStartTime
          let endTime = item.qualificationValidityEndTime
          startTime = this.parseTime(startTime, '{y}-{m}-{d}')
          endTime = this.parseTime(endTime, '{y}-{m}-{d}')
          item.isMain = [startTime, endTime]
          // 改造修改时间
          item.updateTime = this.parseTime(item.updateTime, '{y}-{m}-{d}')
          return item
        })
        this.historyDialog = true
      })
    },
    // 整改按钮
    rectification(scope) {

    },
    // 验收按钮
    acceptance(scope) {

    },
    // 处理dialog关闭
    handleDialogClosed(formName) {
      this.dialogClosed(this, formName)
    },
    handleSizeChange(val) {
      this.fetchList()
    },
    handleCurrentChange(val) {
      this.fetchList()
    },
    // 上传处理
    handleProgress(event, file, fileList) {
      this.btnLoading = true
    },
    handleSuccess(response, file, fileList) {
      this.btnLoading = false
    }
  }
}
</script>

<style lang="scss" scoped>
.open-table{
  /deep/ .inner-table{
    margin-bottom: 20px;
    thead th{
      font-size: 16px
    }
  }
}
.slot-header{
  position: relative;
  .operation-group{
    position: absolute;
    right: 0;
    width: auto
  }
}
.ViewPics{
  /deep/ .el-dialog__body{
    text-align: center
  }
}
.enterpriseId{
width: 100%;
}
</style>
