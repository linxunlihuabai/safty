import Cookies from 'js-cookie'
import store from '@/store'

const TokenKey = 'SIMP'
// tokenf方法
export function getToken() {
  return Cookies.get(TokenKey)
}

export function setToken(token) {
  return Cookies.set(TokenKey, token)
}

export function removeToken() {
  return Cookies.remove(TokenKey)
}

export function setStatus(status) {
  return Cookies.set(TokenKey, status)
}
// 深拷贝方法
export function depClone(obj) {
  return JSON.parse(JSON.stringify(obj))
}
// 模糊搜索（表格） dataArray搜索数据 search搜索的关键字 flag搜索的字段
export function fuzzySearch(dataArray, search, flag) {
  if (search) {
    return dataArray.filter(data => {
      return String(data[flag]).toLowerCase().includes(search.toLowerCase())
    })
  }
  return dataArray
}

// 文件预览方法
export function filePreview(file) {
  const url = process.env.VUE_APP_BASE_API + file.url
  window.open('http://47.99.113.105:8012/onlinePreview?url=' + encodeURIComponent(url))
}

// 通过 module和id 返回分类中文
export function transformClassify(module, id) {
  return store.getters.classify_options[module][id]['label']
}

// 通过 数组、module、id 返回改造数组
// 0是分类模块名 1是id的键名 2自定义的名字
/**
 * @param {string} arr
 * @param {Array} transformArray[二维数组]  0是分类模块名 1是id的键名 2自定义的名字
 * @returns {Array}
 */
export function zhClassify(arr, transformArray) {
  return arr.map((item) => {
    transformArray.forEach((transform) => {
      if (transform[2]) {
        item[transform[2]] = transformClassify(transform[0], item[transform[1]])
      } else {
        item['zh-' + transform[1]] = transformClassify(transform[0], item[transform[1]])
      }
    })

    return item
  })
}
