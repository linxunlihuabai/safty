<template>
  <div style="width:100%;min-width:1024px;">
    <div class="banner">
      <img
        src="@/assets/images/logo.png"
        alt="江西省核工业地质局安全生产管理系统"
        title="江西省核工业地质局安全生产管理系统"
      >
      <h1 class="title-font">江西省核工业地质局安全生产管理系统</h1>
      <a href=""><i class="el-icon-warning-outline" />帮助手册</a>
    </div>
    <div class="lon1">
      <el-card class="box-card">
        <div slot="header" class="clearfix">
          <span
            style="font-size: 26px;color: #158FFF;margin: 0px auto 40px auto;text-align: center;font-weight:bold;"
          >忘记密码</span>
        </div>
        <!-- 登录时忘记密码用的表单 -->
        <el-form
          ref="forgetPasswordForm"
          size="small"
          :rules="rules"
          label-width="114px"
          :model="forgetPasswordForm"
        >
          <el-form-item
            label="安全负责人手机号码"
            required
            prop="responsiblePersonPhone"
            disabled="formDisabled"
          >
            <el-input
              v-model="forgetPasswordForm.responsiblePersonPhone"
              :disabled="disabled"
            />
          </el-form-item>
          <el-form-item
            label="邮箱"
            prop="email"
            disabled="formDisabled"
          >
            <el-input
              v-model="forgetPasswordForm.email"
              :disabled="disabled"
            />
          </el-form-item>
          <el-form-item
            label="验证码"
            label-width="70px"
            class="captcha"
            prop="captcha"
          >
            <el-row>
              <el-col :span="10">
                <el-input v-model="forgetPasswordForm.captcha" placeholder="请输入验证码" />
              </el-col>
              <el-col :span="2" class="sendCode">
                <el-button
                  v-if="!disabled"
                  type="button"
                  @click="sendCode('forgetPasswordForm')"
                >点击进行邮箱验证</el-button>
                <el-button
                  v-if="disabled"
                  type="button"
                  :disabled="disabled"
                  @click="sendCode('forgetPasswordForm')"
                >{{ btntxt }}</el-button>
              </el-col>
            </el-row>
          </el-form-item>
          <el-form-item>
            <el-button
              type="primary"
              class="loginButton"
              :loading="btnLoading"
              @click="submitForm('forgetPasswordForm')"
            >提交验证</el-button>
          </el-form-item>
          <div class="goLogin"><router-link class="login" to="/login">已有账号？立即登录</router-link></div>
        </el-form>
        <el-dialog :visible.sync="resetPasswordDialog" width="500px" :before-close="handleClose">
          <el-form ref="resetPasswordData" :rules="rules" size="small" :model="resetPasswordData" label-width="168px">
            <el-form-item label="请重新设置新密码" required prop="password">
              <el-input
                v-model="resetPasswordData.password"
                type="password"
                auto-complete="off"
                placeholder="输入密码"
              />
            </el-form-item>
            <el-form-item label="确认密码" required prop="confirmPassword">
              <el-input
                v-model="resetPasswordData.confirmPassword"
                type="password"
                auto-complete="off"
                placeholder="确认密码"
              />
            </el-form-item>
            <el-form-item>
              <el-button
                type="primary"
                :loading="btnLoading"
                @click="submitPasswordChange('resetPasswordData')"
              >确定修改密码</el-button>
            </el-form-item>
          </el-form>
        </el-dialog>
      </el-card>
    </div>
    <div class="ban">
      <ul style="list-style:none;">
        <li>
          版权所有：江西省核工业地质局
        </li>
        <li>
          地址：江西省南昌市北京西路160号
        </li>
        <li>
          电话: 0791-86351112
        </li>
      </ul>
    </div>
  </div>
</template>

<script>
import {
  validateIsPhone,
  validateEMail,
  validatePassword
} from '@/utils/regList'
import {
  getForgotPasswordCaptcha,
  checkForgotPasswordCaptcha,
  updatePassword
} from '@/api/user/index'
export default {
  data() {
    const validatePhone = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('手机号码不能为空'))
      }
      if (!validateIsPhone(value)) {
        callback(new Error('请输入正确的手机号码'))
      }
      callback()
    }

    // 验证邮箱是否符合要求
    const checkEmailValidatore = (rule, value, callback) => {
      validateEMail(rule, value, callback)
    }

    // 密码包含 数字,英文,字符中的两种以上，长度8-20
    const validatePass = (rule, value, callback) => {
      /* 密码不能全部是数字，或全部是小写字母，或全部是大写字母 */
      if (value === '') {
        callback(new Error('密码不能为空'))
      }
      if (!validatePassword(value)) {
        callback(new Error('密码包含 数字,英文,字符中的两种以上，长度8-20'))
      }
      callback()
    }
    // 再次输入密码验证
    const validatePass2 = (rule, value, callback) => {
      if (value === '') {
        callback(new Error('再次输入的密码不能为空'))
      } else if (value !== this.resetPasswordData.password) {
        callback(new Error('两次输入密码不一致!'))
      } else {
        callback()
      }
    }
    return {
      formDisabled: true,
      forgetPasswordForm: {
        responsiblePersonPhone: '',
        email: '',
        captcha: '',
        taskId: ''
      },
      resetPasswordData: {
        password: '',
        confirmPassword: '',
        taskId: ''
      },
      rules: {
        password: [{ validator: validatePass, trigger: 'blur' }, { validator: validatePass, trigger: 'change' }],
        confirmPassword: [{ validator: validatePass2, trigger: 'blur' }, { validator: validatePass2, trigger: 'change' }],
        responsiblePersonPhone: [{ validator: validatePhone, trigger: 'blur' }, { validator: validatePhone, trigger: 'change' }],
        email: [
          { required: true, message: '邮箱地址不能为空', trigger: 'change' }, { validator: checkEmailValidatore, trigger: 'blur' }
        ]
      },
      disabledStr: false,
      disabled: false,
      btnLoading: false,
      time: 0,
      resbtntxtetPasswordDialog: false,
      resetPasswordDialog: false,
      btntxt: '重新发送'
    }
  },
  methods: {
    // 60S倒计时
    timer() {
      if (this.time > 0) {
        this.time--
        this.btntxt = this.time + 's后重新获取'
        setTimeout(this.timer, 1000)
      } else {
        this.time = 0
        this.btntxt = '获取验证码'
        this.disabled = false
      }
    },
    // <!--进入登录页-->
    gotoLogin() {
      this.$router.push({
        path: '/index'
      })
    },
    // <!--提交-->
    submitForm(formName) {
      this.$refs[formName].validate(valid => {
        if (this.forgetPasswordForm.captcha === '') {
          this.$message.error('验证码不能为空')
          return
        }
        if (valid) {
          // this.disabledStr = false
          this.btnLoading = true
          this.time = 0
          checkForgotPasswordCaptcha(this.forgetPasswordForm).then(res => {
            res = res.data
            if (res.status === 200) {
              this.resetPasswordData.taskId = res.obj
              this.resetPasswordDialog = true
            } else {
              this.$message.error(res.msg)
            }
            this.btnLoading = false
          }).catch(() => {
            this.btnLoading = false
            this.$message.error('操作异常！请重试')
          })
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    submitPasswordChange(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.btnLoading = true
          updatePassword(this.resetPasswordData).then(res => {
            res = res.data
            if (res.status === 200) {
              this.resetPasswordDialog = false
              this.$router.push({ path: '/login' })
            } else {
              this.$message.error(res.msg)
            }
            this.btnLoading = false
          }).catch(() => {
            this.btnLoading = false
            this.$message.error('操作异常！请重试')
          })
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    // 弹窗：是否关闭
    handleClose(done) {
      this.$confirm('确认关闭？')
        .then(_ => {
          done()
        })
        .catch(_ => {})
    },
    // 邮箱验证发送验证码
    sendCode(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.disabledStr = true
          getForgotPasswordCaptcha(this.forgetPasswordForm).then(res => {
            res = res.data
            if (res.status === 200) {
              this.forgetPasswordForm.taskId = res.obj
              this.time = 60
              this.disabled = true
              this.timer()
            } else {
              this.$message.error(res.msg)
            }
          }).catch(() => {
            this.disabled = false
            this.$message.error('验证码发送失败！请重试')
          })
        } else {
          this.$message.error('请输入完整信息')
          return false
        }
      })
    }
  }
}
</script>

<style lang="scss" scoped>
.loading-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  background: #aedff8;
  display: flex;
  align-items: center;
  justify-content: center;
}
.register-wrapper img {
  position: absolute;
  z-index: 1;
}
.register-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
}
#register {
  max-width: 340px;
  margin: 60px auto;
  background: #fff;
  padding: 20px 40px;
  border-radius: 10px;
  position: relative;
  z-index: 9;
}
.title {
  font-size: 26px;
  line-height: 50px;
  font-weight: bold;
  margin: 10px;
  text-align: center;
}
.el-form-item {
  text-align: center;
}
.login {
  font-size: 14px;
  color: #1ab2ff;
  cursor: pointer;
}
.login:hover {
  color: #2c2fd6;
}
.code >>> .el-form-item__content {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.code button {
  margin-left: 20px;
  width: 140px;
  text-align: center;
}
.sendCode {
  padding-left: 14px;
}
.el-button--primary:focus {
  background: #409eff;
  border-color: #409eff;
  color: #fff;
}
.banner>*{
  display: inline-block;
  vertical-align: middle;
}
.banner{
  padding:10px 0; margin: 0 auto;width:1024px;
  a{
    font-size:14px;padding:37px 0;color:blue;float:right;
    }
    img{
      width: 80px;height:80px;
    }
}
.lon1 {
  height:650px;
  position: relative;
  background: url("../../assets/images/loginImg.jpg") no-repeat center;
  overflow: hidden;
  width: 100%;
         .loginButton{
          width:100%;
          margin-bottom:10px;
        }
}
h1{
  font-size: 36px;
  background: linear-gradient(#BCDDFF, #0E88EB);
    -webkit-background-clip: text;
    /* #108BFC,#008CD6 */
        color: transparent;
}
.box-card {
  text-align: center;
  font-size: 18px;
  height: 380px;
  width: 450px;
  background-color:white;
  position:absolute;
  right:20%;
  top:130px;
}
.ban{
  padding-top:12px;
}
.ban ul li{
  padding-top:12px;
  font-size: 14px;
  text-align: center;
  color: #898989;
}
</style>
