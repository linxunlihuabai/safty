<template>
  <div>
    <template>
      <el-input v-model="locData.longitude" style="padding-right:20px;" />
      <el-input v-model="locData.latitude" style="padding-right:20px;" />
      <baidu-map class="bm-view" :center="center" :zoom="zoom" :scroll-wheel-zoom="true" ak="sCrmUchPh7eKuHSyuZKx0e1acqyk7REF" @ready="mapReady" @click="getClickInfo" />
    </template>
  </div>
</template>

<script>
export default {
  data() {
    return {
      center: {
        lng: 0,
        lat: 0
      },
      zoom: 3,
      locDialog: false,
      locData: {
        ids: 0,
        longitude: '',
        latitude: ''
      }
    }
  },
  methods: {
    // 百度地图
    mapReady({ BMap, map }) {
      this.center.lng = 115.822616
      this.center.lat = 28.73558
      this.zoom = 11
      window.map = map // 将map变量存储在全局
      var point = new BMap.Point(this.center.lng, this.center.lat) // 初始化地图,设置中心点坐标和地图级别
      map.centerAndZoom(point, this.zoom)
      var marker = new BMap.Marker(point) // 创建标注
      map.addOverlay(marker) // 将标注添加到地图中
      /* 这是地图地面的底下模块 */
      var circle = new BMap.Circle(point, 6, {
        strokeColor: 'Green',
        strokeWeight: 6,
        strokeOpacity: 1,
        Color: 'Green',
        fillColor: '#f03'
      })
      // 将标注添加到地图中
      map.addOverlay(circle)
    },
    // 地图点击事件
    getClickInfo(e) {
      // 清除所要清除的覆盖物
      map.clearOverlays()
      var myMarker = new BMap.Marker(new BMap.Point(e.point.lng, e.point.lat))
      map.addOverlay(myMarker)
      this.locData.longitude = e.point.lng
      this.locData.latitude = e.point.lat
    }
  }
}
</script>

<style scoped>
.bm-view{
width:100%;
height:600px;
}
</style>
