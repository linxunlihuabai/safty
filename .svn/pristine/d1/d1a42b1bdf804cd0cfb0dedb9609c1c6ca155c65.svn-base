<template>
  <div class="app-container">
    <div class="home-workbench">
      <div class="home-common">
        <panel-group @handleSetLineChartData="handleSetLineChartData" />
      </div>
      <div class="news">
        <el-row :gutter="30" justify="space-between" type="flex">
          <el-col :span="18">
            <transaction-table :data="list" :show-header="false" :columns="columns" />
          </el-col>
          <el-col :span="6">
            <todo-list />
          </el-col>
        </el-row>
        <el-row :gutter="30" justify="space-between" type="flex">
          <el-col :span="18">
            <transaction-table border :tag-type="'success'" :data="list1" :columns="columns1" height="600px">

              <template v-slot="scope">
                <el-button-group class="operate">
                  <el-tag
                    v-if="scope.row.dangerQuantity===0"
                    type="info"
                  >
                    无隐患
                  </el-tag>
                  <el-tag
                    v-else-if="scope.row.state==1"
                    type="danger"
                    @click="$router.push('/safetyInspection/overallSituation')"
                  >待整改</el-tag>
                  <el-tag
                    v-else-if="scope.row.state==2"
                    type="warning"
                    @click="$router.push('/safetyInspection/overallSituation')"
                  >整改中</el-tag>
                  <el-tag
                    v-else-if="scope.row.state==3"
                    @click="$router.push('/safetyInspection/overallSituation')"
                  >待验收</el-tag>
                  <el-tag
                    v-else-if="scope.row.state==4"
                    type="success"
                  >
                    整改完成
                  </el-tag>
                </el-button-group>
              </template>

            </transaction-table>
          </el-col>
          <el-col :span="6">
            <div class="chart-wrapper">
              <referer-website />
            </div>
          </el-col>
        </el-row>
        <el-row :gutter="30" justify="space-between" type="flex">
          <el-col :span="18">
            <div class="chart-wrapper">
              <mixed-line-bar />
            </div>

          </el-col>
          <el-col :span="6">
            <div class="chart-wrapper">
              <world-total-population />
            </div>
          </el-col>
        </el-row>

      </div>
    </div>
  </div>
</template>

<script>
import PanelGroup from './components/PanelGroup'
import BarChart from './components/BarChart'
import MixedLineBar from './components/MixedLineBar'
import ShareDataset from './components/ShareDataset'
import RefererWebsite from './components/RefererWebsite'
import StackedAreaChart from './components/StackedAreaChart'
import WorldTotalPopulation from './components/WorldTotalPopulation'
import TransactionTable from './components/TransactionTable'
import TodoList from './components/TodoList'

const handlePanelGroup = {
  monitor() {
    window.open('http://demo.easynvr.com:10800/#/index/icons')
  },
  messages: {
    expectedData: [200, 192, 120, 144, 160, 130, 140],
    actualData: [180, 160, 151, 106, 145, 150, 130]
  },
  purchases: {
    expectedData: [80, 100, 121, 104, 105, 90, 100],
    actualData: [120, 90, 100, 138, 142, 130, 130]
  },
  shoppings: {
    expectedData: [130, 140, 141, 142, 145, 150, 160],
    actualData: [120, 82, 91, 154, 162, 140, 130]
  }
}

export default {
  components: {
    PanelGroup,
    BarChart,
    MixedLineBar,
    ShareDataset,
    RefererWebsite,
    StackedAreaChart,
    WorldTotalPopulation,
    TransactionTable,
    TodoList
  },
  data() {
    return {
      lineChartData: handlePanelGroup.newVisitis,
      list: [
        {
          title: '庆祝新中国成立70周年大型成就展网上展馆',
          time: '2019-07-17'
        },
        {
          title: '关于举办地质灾害防灾减灾及救灾能力建设高级研修班的函 高级研修班的函 ',
          time: '2019-12-18 '
        },
        {
          title: '用于多选表格，切换所有行的选中状态',
          time: '2019-12-18 '
        },
        {
          title: '用于单选表格，设定某一行为选中行，如果调用时不加参数，则会取消目前高亮行的选中状态',
          time: '2019-12-18 '
        },
        {
          title: '关于举办地质灾害防灾减灾及救灾能力建设高级研修班的函 高级研修班的函 ',
          time: '2019-12-18 '
        },
        {
          title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
          time: '2019-12-18 '
        },
        {
          title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
          time: '2019-12-18 '
        },
        {
          title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
          time: '2019-12-18 '
        },
        {
          title: '对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换 ',
          time: '2019-12-18 '
        },
        {
          title: '不传入参数时用于清空所有过滤条件，数据会恢复成未过',
          time: '2019-07-17 '
        }
      ],
      columns: [
        {
          hasSort: false, // <Boolean> 是否排序
          prop: 'title', // <String>  对应属性名
          label: '', // <String>   表头标签
          align: '' // <String> 内容对齐方式
        },
        {
          hasSort: false, // <Boolean> 是否排序
          prop: 'time', // <String>  对应属性名
          label: '', // <String>   表头标签
          align: 'right', // <String> 内容对齐方式
          width: 100 // <String,Number> 列宽
        }
      ],
      list1: [
        {
          title: '庆祝新中国',
          number: 1,
          state: '1',
          time: '2019-07-17'
        },
        {
          title: '关于举办',
          number: 1,
          state: '2',
          time: '2019-12-18 '
        },
        {
          title: '用于多',
          number: 1,
          state: '3',
          time: '2019-12-18 '
        },
        {
          title: '用于单选表',
          number: 1,
          state: '4',
          time: '2019-12-18 '
        },
        {
          title: '高级研修班',
          number: 1,
          state: '2',
          time: '2019-12-18 '
        },
        {
          title: '素由隐藏切换 ',
          number: 1,
          state: '3',
          time: '2019-12-18 '
        },
        {
          title: '对隐藏切换 ',
          number: 1,
          state: '1',
          time: '2019-12-18 '
        },
        {
          title: '素由隐藏切换 ',
          number: 1,
          state: '2',
          time: '2019-12-18 '
        },
        {
          title: '对隐藏切换 ',
          number: 1,
          state: '2',
          time: '2019-12-18 '
        },
        {
          title: '当其祖切换 ',
          number: 1,
          state: '3',
          time: '2019-12-18 '
        }
      ],

      columns1: [
        {
          hasSort: false, // <Boolean> 是否排序
          prop: 'title', // <String>  对应属性名
          label: '项目名称', // <String>   表头标签
          align: 'center' // <String> 内容对齐方式
        },
        {
          hasSort: false, // <Boolean> 是否排序
          prop: 'number', // <String>  对应属性名
          label: '隐患数量', // <String>   表头标签
          align: 'center' // <String> 内容对齐方式
        },
        {
          hasSort: false, // <Boolean> 是否排序
          prop: 'state', // <String>  对应属性名
          label: '状态', // <String>   表头标签
          slot: true,
          align: 'center' // <String> 内容对齐方式
        },
        {
          hasSort: false, // <Boolean> 是否排序
          prop: 'time', // <String>  对应属性名
          label: '时间', // <String>   表头标签
          align: 'center' // <String> 内容对齐方式
        }
      ]
    }
  },
  methods: {
    handleSetLineChartData(type) {
      handlePanelGroup[type]()
    }
  }
}
</script>

<style lang="scss" scoped>
.test-img{
  display: block;
  width: 100%;
  height: 100%;
  // height: auto;
}
  .chart-wrapper {
    background: #fff;
    padding: 0;
    margin-bottom: 32px;
    .chart{
      padding: 16px;
    }
  }
</style>

