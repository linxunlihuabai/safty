<template>
  <div class="app-container">
    <div class="panel">
      <div class="panel-title">
        <breadcrumb class="breadcrumb-container" />
      </div>
      <el-row type="flex" justify="space-between" align="top">
        <el-button type="primary" size="small" icon="el-icon-plus" style="visibility: hidden;" @click="addDailyForm">新增</el-button>

        <div>
          <el-autocomplete
            v-model="searchTemp"
            size="small"
            :fetch-suggestions="querySearch"
            placeholder="请输入内容"
            style="width:180px;margin-right:10px"
            :trigger-on-focus="false"
            @select="handleSelect"
          />

          <el-button type="primary" icon="el-icon-search" size="small" @click="onSearch">查询</el-button>
        </div>
      </el-row>
      <el-row>
        <el-col>
          <el-table
            ref="table"
            v-loading="tableDataLoading"
            class="open-table"
            border
            :data="tableData"
            size="small"
            stripe
            :row-key="getRowKeys"
            :expand-row-keys="expands"
            @expand-change="expandChange"
          >
            <!-- 隐患整体详情展示 -->
            <el-table-column type="expand">
              <template v-if="props.row.dangerQuantity>0" slot-scope="props">

                <!-- 隐患情况 -->
                <el-table
                  v-loading="hiddenDangerLoading"
                  :data="hiddenDangerTable"
                  border
                  style="width: 100%"
                  class="inner-table usage"
                >
                  <el-table-column
                    prop="date"
                    align="center"
                  >
                    <template slot="header" slot-scope="scope">
                      <el-row class="slot-header">
                        <el-col>
                          隐患情况
                        </el-col>
                        <!-- <el-col class="operation-group">
                          <el-button-group class="operate">
                            <el-button
                              size="mini"
                              type="text"
                              title="新增"
                              icon="el-icon-circle-plus-outline"
                              @click="addDangerForm(props)"
                            />
                          </el-button-group>
                        </el-col> -->
                      </el-row>
                    </template>
                    <el-table-column prop="isMain" label="主要隐患">
                      <template slot-scope="scope">
                        <el-tag v-if="scope.row.isMain==='是'">主要隐患</el-tag>
                        <el-tag v-else type="info">普通隐患</el-tag>
                      </template>
                    </el-table-column>

                    <el-table-column prop="zh-realm" label="排查领域" />

                    <el-table-column prop="model" label="整改方式" />

                    <el-table-column prop="part" label="隐患部位" />
                    <el-table-column prop="content" label="隐患内容" />
                    <el-table-column label="照片" :width="GLOBAL.TABLE_CELL_WIDTH.MINI">
                      <template slot-scope="scope">
                        <el-button-group class="operate">
                          <sun-button :type="'view'" @click="viewPics(scope.row.files)" />
                        </el-button-group>
                      </template>
                    </el-table-column>
                    <!-- <el-table-column label="操作" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL">
                      <template slot-scope="scope">
                        <el-button-group class="operate">
                          <el-button type="text" size="mini" icon="el-icon-edit" @click="editItem(scope)" />
                          <el-button type="text" size="mini" icon="el-icon-delete" @click="delItem(scope)" />
                        </el-button-group>
                      </template>
                    </el-table-column> -->
                    <!-- <el-table-column label="历史修改" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL">
                      <template slot-scope="scope">
                        <el-button-group class="operate">
                          <el-button
                            type="text"
                            size="mini"
                            icon="el-icon-view"
                            @click="history(scope)"
                          />
                        </el-button-group>
                      </template>
                    </el-table-column> -->
                  </el-table-column>

                </el-table>

                <el-row ref="hiddenDangerPage">
                  <!-- 分页栏 -->
                  <el-pagination
                    :current-page.sync="hiddenDangerCpage"
                    :page-sizes="[5, 10, 15, 20]"
                    :page-size.sync="hiddenDangerPageSize"
                    layout="sizes, prev, pager, next"
                    :total="hiddenDangerTotal"
                    @size-change="handleHiddenDangerSizeChange"
                    @current-change="handleHiddenDangerCurrentChange"
                  />
                </el-row>

                <!-- 整改落实 -->
                <el-table
                  v-if="props.row.state>=2"
                  :data="stateTable"
                  border
                  style="width: 100%"
                  class="inner-table usage"
                >
                  <el-table-column
                    prop="date"
                    label="使用情况"
                    align="center"
                  >
                    <template slot="header" slot-scope="scope">
                      <el-row class="slot-header">
                        <el-col>
                          整改落实情况
                        </el-col>
                      </el-row>
                    </template>
                    <el-table-column
                      prop="personResponsible"
                      label="责任人"
                    />
                    <el-table-column
                      prop="isHistory"
                      label="是否上月未整改"
                    />
                    <el-table-column
                      prop="timeLimit"
                      label="时限"
                    />
                    <el-table-column
                      prop="cost"
                      label="费用"
                    />
                    <el-table-column
                      prop="correctiveMeasures"
                      label="整改措施"
                    />
                    <el-table-column
                      v-if="props.row.state>=3"
                      prop="completionTime"
                      label="完成整改时间"
                    />
                    <el-table-column label="附件" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL">
                      <template slot-scope="scope">
                        <el-button-group class="operate">
                          <sun-button :type="'view'" @click="filePreview(scope.row.rectificationPlanFiles[0])" />
                        </el-button-group>
                      </template>
                    </el-table-column>
                  </el-table-column>

                </el-table>

                <!-- 整改验收 -->
                <el-table
                  v-if="props.row.state>=4"
                  :data="stateTable"
                  border
                  style="width: 100%"
                  class="inner-table usage"
                >
                  <el-table-column
                    prop="date"
                    label="使用情况"
                    align="center"
                  >
                    <template slot="header" slot-scope="scope">
                      <el-row class="slot-header">
                        <el-col>
                          整改验收
                        </el-col>
                      </el-row>
                    </template>
                    <el-table-column
                      prop="acceptPerson"
                      label="验收负责人"
                    />
                    <el-table-column
                      prop="acceptTime"
                      label="验收时间"
                    />
                    <el-table-column
                      prop="acceptOpinion"
                      label="验收意见"
                    />
                  </el-table-column>

                </el-table>

              </template>
            </el-table-column>
            <!-- 详情展示 -->
            <el-table-column prop="projectName" label="项目名称" />
            <el-table-column prop="checkAddress" label="检查地点" />
            <el-table-column prop="checkTime" label="检查时间" />
            <el-table-column prop="inspectors" label="检查人员" />
            <el-table-column prop="leaders" label="领导参与情况" />
            <el-table-column prop="dangerQuantity" label="隐患数量" :width="GLOBAL.TABLE_CELL_WIDTH.MINI" />
            <el-table-column prop="participants" label="参与人数" :width="GLOBAL.TABLE_CELL_WIDTH.MINI" />
            <el-table-column label="照片" :width="GLOBAL.TABLE_CELL_WIDTH.MINI">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <sun-button :type="'view'" @click="viewPics(scope.row.attachmentFiles)" />
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="登记" :width="GLOBAL.TABLE_CELL_WIDTH.MEDIUM">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-tag
                    v-if="scope.row.dangerQuantity===0"
                  >
                    无隐患
                  </el-tag>
                  <el-button
                    v-else-if="scope.row.state===1"
                    type="text"
                    size="mini"
                    @click="handleState(scope)"
                  >待整改</el-button>
                  <el-button
                    v-else-if="scope.row.state===2"
                    type="text"
                    size="mini"
                    @click="handleState(scope)"
                  >整改中</el-button>
                  <el-button
                    v-else-if="scope.row.state===3"
                    type="text"
                    size="mini"
                    @click="handleState(scope)"
                  >待验收</el-button>
                  <el-tag
                    v-else-if="scope.row.state===4"
                    type="success"
                  >
                    整改完成
                  </el-tag>
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="操作" :width="GLOBAL.TABLE_CELL_WIDTH.BIG">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <sun-button :type="'edit'" @click="editItem(scope)" />
                  <sun-button :type="'delete'" @click="delItem(scope)" />
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="历史修改" :width="GLOBAL.TABLE_CELL_WIDTH.MINI">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <sun-button :type="'history'" @click="history(scope)" />
                </el-button-group>
              </template>
            </el-table-column>
          </el-table>
        </el-col>
      </el-row>
      <!-- 分页栏 -->

      <el-row ref="page">
        <!-- 分页栏 -->
        <el-pagination
          :current-page.sync="cpage"
          :page-sizes="[5, 10, 15, 20]"
          :page-size.sync="pageSize"
          layout="sizes, prev, pager, next"
          :total="total"
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
        />
      </el-row>

      <!-- 弹出添加窗口 -->

      <!-- 日常检查登记表 -->
      <el-dialog
        title="日常检查登记表"
        :visible.sync="dailyFormDialog"
        :width="GLOBAL.DIALOG_WIDTH.MEDIUM"
        :close-on-click-modal="false"
        @closed="handleDialogClosed('dailyForm')"
      >
        <el-form
          id="addData"
          ref="dailyForm"
          size="small"
          :model="dailyForm"
          :rules="dailyFormRules"
          :label-width="GLOBAL.FORM_LABEL_WIDTH.MEDIUM"
        >
          <table border="1" class="formTable">
            <tr>
              <td>
                <el-form-item label="项目名称" prop="projectId">
                  <sun-select v-model="dailyForm.projectId" :options="projectOptions" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="检查地点" prop="checkAddress">
                  <el-input v-model="dailyForm.checkAddress" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="检查时间" prop="checkTime">
                  <el-date-picker
                    v-model="dailyForm.checkTime"
                    type="date"
                    value-format="yyyy-MM-dd"
                    placeholder="选择日期"
                  />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="检查人员" prop="inspectors">
                  <el-input v-model="dailyForm.inspectors" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="领导参与情况" prop="leaders">
                  <el-radio-group v-model="dailyForm.leaders">
                    <el-radio label="参与" />
                    <el-radio label="未参与" />
                  </el-radio-group>
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="参与人数" prop="participants">
                  <el-input-number v-model="dailyForm.participants" :min="0" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="隐患数量" prop="dangerQuantity">
                  <el-input-number v-model="dailyForm.dangerQuantity" :disabled="true" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="文件" prop="attachmentFiles">
                  <sun-upload
                    ref="UPLOAD"
                    :data="GLOBAL.FILE_TYPE.OTHER"
                    :action="GLOBAL.FILE_API"
                    :file-list.sync="dailyForm.attachmentFiles"
                    :multiple="true"
                    :btn-loading.sync="btnLoading"
                  />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>

                <el-button @click="handleResetForm('dailyForm')">重置</el-button>
                <el-button type="primary" :loading="btnLoading" @click="dailyFormSubmit">{{ handle }}</el-button>
                <p v-if="handle==='添加'" style="margin-bottom:0;color:#f56c6c">如有隐患，请选择主要隐患</p>

              </td>
            </tr>
          </table>
        </el-form>
        <template v-if="handle==='添加'">
          <el-divider />
          <el-button type="primary" size="small" @click="addDangerForm">添加隐患登记</el-button>
          <el-table :data="dailyForm.hiddenDangers" style="width: 100%" empty-text="暂无隐患">
            <el-table-column label="主要隐患" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
              <template scope="scope">
                <el-radio
                  v-model="isMain"
                  :label="scope.$index"
                >&nbsp;</el-radio>
              </template>
            </el-table-column>
            <el-table-column prop="zh-realm" label="排查领域" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
            </el-table-column>

            <el-table-column prop="model" label="整改方式" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
            </el-table-column>
            <el-table-column prop="part" label="隐患部位" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
            </el-table-column>
            <el-table-column prop="content" label="隐患内容" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
            </el-table-column>
            <el-table-column label="隐患照片" prop="checkAddress" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-button type="text" size="mini" icon="el-icon-search" @click="viewPics(scope.row.files)" />
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="操作" align="center">
              <template slot="header" slot-scope="scope">
                <span class="header-label">{{ scope.column.label }}</span>
              </template>
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <el-button type="text" size="mini" icon="el-icon-delete" @click="delDangerItem(scope)" />
                </el-button-group>
              </template>
            </el-table-column>
          </el-table>
        </template>
      </el-dialog>

      <!-- 内层弹窗 -->

      <!-- 隐患登记表 -->
      <!-- <el-dialog
        title="隐患登记表"
        :visible.sync="dangerFormDialog"
        :width="GLOBAL.DIALOG_WIDTH.SMALL"
        append-to-body
        :close-on-click-modal="false"
        @closed="handleDialogClosed('dangerForm')"
      >
        <el-form
          ref="dangerForm"
          size="small"
          :model="dangerForm"
          :label-width="GLOBAL.FORM_LABEL_WIDTH.MEDIUM"
          :rules="dangerFormRules"
        >
          <table border="1" class="formTable">
            <tr>
              <td>
                <el-form-item label="排查领域" prop="realm">
                  <sun-select :module="'排查领域'" v-model="dangerForm.realm" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="主要隐患" prop="isMain">
                  <el-radio-group v-model="dangerForm.isMain">
                    <el-radio disabled label="是" />
                    <el-radio disabled label="否" />
                  </el-radio-group>
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="整改方式" prop="model">
                  <el-radio-group v-model="dangerForm.model">
                    <el-radio label="立即整改" />
                    <el-radio label="限期整改" />
                  </el-radio-group>
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="隐患部位" prop="part">
                  <el-input v-model="dangerForm.part" />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>

                <el-form-item label="隐患内容" prop="content">
                  <el-input
                    v-model="dangerForm.content"
                    type="textarea"
                    :autosize="{ minRows: 2, maxRows: 4}"
                    placeholder="请输入内容"
                  />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>
                <el-form-item label="隐患照片" prop="files">
                  <sun-upload
                    ref="UPLOAD"
                    :data="GLOBAL.FILE_TYPE.OTHER"
                    :action="GLOBAL.FILE_API"
                    :file-list.sync="dangerForm.files"
                    :multiple="true"
                  />
                </el-form-item>
              </td>
            </tr>
            <tr>
              <td>

                <el-button @click="handleResetForm('dangerForm')">重置</el-button>
                <el-button type="primary" :loading="btnLoading" @click="addDangerItem">{{ handle }}</el-button>

              </td>
            </tr>
          </table>

        </el-form>
      </el-dialog> -->
    </div>

    <!-- （提交正在整改，即 [整改中] 状态） -->
    <el-dialog
      :title="handle"
      :visible.sync="rectificationFormDialog"
      :width="GLOBAL.DIALOG_WIDTH.SMALL"
      append-to-body
      :close-on-click-modal="false"
      @closed="handleDialogClosed('rectificationForm')"
    >

      <el-form
        ref="rectificationForm"
        size="small"
        :model="rectificationForm"
        :label-width="GLOBAL.FORM_LABEL_WIDTH.MEDIUM"
        :rules="rectificationFormRules"
      >
        <table border="1" class="formTable">
          <tr>
            <td>
              <el-form-item label="整改责任人" prop="personResponsible">
                <el-input v-model="rectificationForm.personResponsible" />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="是否上月未整改" prop="isHistory">
                <el-radio-group v-model="rectificationForm.isHistory">
                  <el-radio label="是" />
                  <el-radio label="否" />
                </el-radio-group>
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="时限" prop="timeLimit">
                <el-date-picker
                  v-model="rectificationForm.timeLimit"
                  type="date"
                  placeholder="选择日期"
                  format="yyyy-MM-dd"
                  value-format="yyyy-MM-dd"
                />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="费用" prop="cost">
                <el-input v-model="rectificationForm.cost" />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="整改措施" prop="correctiveMeasures">
                <el-input v-model="rectificationForm.correctiveMeasures" />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="整改预案" prop="rectificationPlanFiles">
                <sun-upload
                  ref="UPLOAD"
                  :data="GLOBAL.FILE_TYPE.OTHER"
                  :file-list.sync="rectificationForm.rectificationPlanFiles"
                  :btn-loading.sync="btnLoading"
                  :limit="1"
                />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>

              <el-button @click="handleResetForm('rectificationForm')">重置</el-button>
              <el-button type="primary" :loading="btnLoading" @click="stateFormSubmit('rectificationForm')">{{ handle }}</el-button>

            </td>
          </tr>
        </table>

      </el-form>

    </el-dialog>

    <!-- （提交已整改，即 [待验收] 状态） -->
    <el-dialog
      :title="handle"
      :visible.sync="completeTimeFormDialog"
      :width="GLOBAL.DIALOG_WIDTH.SMALL"
      append-to-body
      :close-on-click-modal="false"
      @closed="handleDialogClosed('completeTimeForm')"
    >

      <el-form
        ref="completeTimeForm"
        size="small"
        :model="completeTimeForm"
        :label-width="GLOBAL.FORM_LABEL_WIDTH.MEDIUM"
        :rules="completeTimeFormRules"
      >
        <table border="1" class="formTable">
          <tr>
            <td>
              <el-form-item label="完成整改时间" prop="completionTime">
                <el-date-picker
                  v-model="completeTimeForm.completionTime"
                  type="date"
                  placeholder="选择日期"
                  format="yyyy-MM-dd"
                  value-format="yyyy-MM-dd"
                />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>

              <el-button @click="handleResetForm('completeTimeForm')">重置</el-button>
              <el-button type="primary" :loading="btnLoading" @click="stateFormSubmit('completeTimeForm')">{{ handle }}</el-button>

            </td>
          </tr>
        </table>

      </el-form>

    </el-dialog>

    <!-- （提交已验收，即 [整改完成] 状态） -->
    <el-dialog
      :title="handle"
      :visible.sync="acceptanceFormDialog"
      :width="GLOBAL.DIALOG_WIDTH.SMALL"
      append-to-body
      :close-on-click-modal="false"
      @closed="handleDialogClosed('acceptanceForm')"
    >

      <el-form
        ref="acceptanceForm"
        size="small"
        :model="acceptanceForm"
        :label-width="GLOBAL.FORM_LABEL_WIDTH.MEDIUM"
        :rules="acceptanceFormRules"
      >
        <table border="1" class="formTable">
          <tr>
            <td>
              <el-form-item label="验收负责人" prop="acceptPerson">
                <el-input v-model="acceptanceForm.acceptPerson" />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="验收时间" prop="acceptTime">
                <el-date-picker
                  v-model="acceptanceForm.acceptTime"
                  type="date"
                  placeholder="选择日期"
                  format="yyyy-MM-dd"
                  value-format="yyyy-MM-dd"
                />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>
              <el-form-item label="验收意见" prop="acceptOpinion">
                <el-input v-model="acceptanceForm.acceptOpinion" />
              </el-form-item>
            </td>
          </tr>
          <tr>
            <td>

              <el-button @click="handleResetForm('acceptanceForm')">重置</el-button>
              <el-button type="primary" :loading="btnLoading" @click="stateFormSubmit('acceptanceForm')">{{ handle }}</el-button>

            </td>
          </tr>
        </table>

      </el-form>
    </el-dialog>

    <!-- 用于预览上传多张图片的dialog -->
    <pic-dialog :visible.sync="sunViewPics" :pic-list="sunPicList" />

    <!-- 用于查看历史记录的dialog -->
    <el-dialog
      title="历史记录"
      :visible.sync="historyDialog"
      :close-on-click-modal="false"
      :width="GLOBAL.DIALOG_WIDTH.BIG"
    >
      <el-table ref="table" border :data="historyTable" size="small" stripe>

        <!-- 历史记录详情展示 -->
        <el-table-column prop="checkAddress" label="检查地点" />
        <el-table-column prop="checkTime" label="检查时间" />
        <el-table-column prop="inspectors" label="检查人员" />
        <el-table-column prop="leaders" label="领导参与情况" />
        <el-table-column prop="dangerQuantity" label="隐患数量" :width="GLOBAL.TABLE_CELL_WIDTH.MINI" />
        <el-table-column prop="participants" label="参与人数" :width="GLOBAL.TABLE_CELL_WIDTH.MINI" />

        <el-table-column label="照片" :width="GLOBAL.TABLE_CELL_WIDTH.MINI">
          <template slot-scope="scope">
            <el-button-group class="operate">
              <sun-button :type="'view'" @click="viewPics(scope.row.attachmentFiles)" />
            </el-button-group>
          </template>
        </el-table-column>

        <el-table-column prop="operatorName" label="操作人" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL" />
        <el-table-column prop="updateTime" label="操作时间" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL" />
      </el-table>
    </el-dialog>

  </div>
</template>

<script>
import { zhClassify } from '@/utils'
import {
  getSafetyCheckList,
  addSafetyCheck,
  updateSafetyCheck,
  deleteSafetyCheck,
  historySafetyCheck,
  updateState2,
  updateState3,
  updateState4,
  addNoPass
} from '@/api/safetyInspection/dailySafetyInspection' // 日常安全检查API
import {
  getHiddenDangerList,
  addHiddenDanger
} from '@/api/safetyInspection/overallSituation' // 隐患情况API
import {
  getProjectsList
} from '@/api/config' // 获取项目列表API

export default {
  data() {
    return {
      tableDataLoading: true,
      // 日常检查登记表
      dailyForm: {
        projectId: null,
        checkAddress: '',
        checkTime: '',
        inspectors: '',
        leaders: '',
        participants: 0, // 参与人数
        dangerQuantity: 0,
        attachmentFiles: [],
        hiddenDangers: []
      },
      // 日常检查登记表验证规则
      dailyFormRules: {
        projectId: [
          { required: true, message: '请选择项目名称', trigger: 'change' }
        ],
        checkAddress: [
          { required: true, message: '请输入检查地址', trigger: 'blur' }
        ],
        checkTime: [
          { required: true, message: '请选择检查时间', trigger: 'change' }
        ],
        inspectors: [
          { required: true, message: '请输入检查人员', trigger: 'blur' }
        ],
        leaders: [
          { required: true, message: '请选择领导参与情况', trigger: 'change' }
        ],
        participants: [
          { required: true, message: '请输入参与人数', trigger: 'change' }
        ],
        attachmentFiles: [{ required: true, message: '请上传文件', trigger: 'change' }]
      },
      projectOptions: [],
      // 隐患登记表
      dangerForm: {
        realm: '', // 排查领域
        part: '', // 隐患部位
        model: '', // 整改方式
        isMain: '否', // 是否是主要隐患
        content: '', // 隐患内容
        files: []
      },
      // 隐患登记表验证规则
      dangerFormRules: {
        realm: [
          { required: true, message: '请选择排查领域', trigger: 'change' }
        ],
        part: [
          { required: true, message: '请输入隐患部位', trigger: 'blur' }
        ],
        model: [
          { required: true, message: '请选择整改方式', trigger: 'change' }
        ],
        content: [
          { required: true, message: '请输入隐患内容', trigger: 'blur' }
        ],
        files: [{ required: true, message: '请上传文件', trigger: 'change' }]
      },
      // 整改表
      rectificationForm: {
        personResponsible: '', // 整改责任人
        timeLimit: '', // 时限
        cost: '', // 费用
        correctiveMeasures: '', // 整改措施
        isHistory: '', // 是否上月未整改：是/否
        rectificationPlanFiles: [] // 整改预案附件
      },
      rectificationFormRules: {
        personResponsible: [
          { required: true, message: '请输入整改责任人', trigger: 'blur' }
        ],
        isHistory: [
          { required: true, message: '请选择是否上月未整改', trigger: 'change' }
        ],
        timeLimit: [
          { required: true, message: '请选择时限', trigger: 'change' }
        ],
        cost: [
          { required: true, message: '请输入费用', trigger: 'blur' }
        ],
        correctiveMeasures: [
          { required: true, message: '请输入整改措施', trigger: 'blur' }
        ],
        rectificationPlanFiles: [{ required: true, message: '请上传文件', trigger: 'change' }]
      },
      // 完成整改时间
      completeTimeForm: {
        completionTime: ''
      },
      completeTimeFormRules: {
        completionTime: [
          { required: true, message: '请选择完成整改时间', trigger: 'change' }
        ]
      },
      // 完成验收
      acceptanceForm: {
        acceptPerson: '',
        acceptTime: '',
        acceptOpinion: ''
      },
      acceptanceFormRules: {
        acceptPerson: [
          { required: true, message: '请输入验收负责人', trigger: 'blur' }
        ],
        acceptTime: [
          { required: true, message: '请选择验收时间', trigger: 'change' }
        ],
        acceptOpinion: [
          { required: true, message: '请输入验收意见', trigger: 'blur' }
        ]
      },
      dailyFormDialog: false, // 日常检查登记表弹出框标志
      dangerFormDialog: false, // 隐患登记表弹出框标志
      rectificationFormDialog: false, // 提交到整改中状态表弹出框标志
      completeTimeFormDialog: false, // 完成整改时间
      acceptanceFormDialog: false, // 验收完成
      dailyTable: [],
      hiddenDangerLoading: true,
      hiddenDangerTable: [],
      isMain: null,
      cpage: 1,
      pageSize: 5,
      total: 0,
      hiddenDangerCpage: 1,
      hiddenDangerPageSize: 5,
      hiddenDangerTotal: 0,
      historyDialog: false,
      historyTable: [], // 历史记录
      btnLoading: false
    }
  },
  computed: {
    tableData() {
      const search = this.search
      return this.fuzzySearch(this.dailyTable, search, 'projectName')
    },
    queryList() {
      return this.dailyTable.map(data => {
        return { value: data.projectName }
      })
    },
    stateTable() {
      const id = this.expands[0]
      console.log(id)
      return this.tableData.filter(item => {
        return item.id === id
      })
    }
  },
  created() {
    this.fetchSafetyCheckList()
    getProjectsList().then(res => {
      const data = res.data.obj
      this.projectOptions = data.map(item => {
        return {
          label: item.projectName,
          value: item.id
        }
      })
    })
  },
  methods: {
    // 动态分页查询 [日常安全检查] 列表
    fetchSafetyCheckList(cpage, pageSize) {
      const params = {}
      params.page = cpage || this.cpage
      params.size = pageSize || this.pageSize
      params.stress = true
      getSafetyCheckList(params)
        .then(res => {
          const pageObj = res.data.obj
          this.total = pageObj.total
          const list = pageObj.list
          this.dailyTable = list
          this.tableDataLoading = false
        }).catch(() => {})
    },
    // 动态分页查询 [隐患情况] 列表
    fetchHiddenDangerList(id, hiddenDangerCpage, hiddenDangerPageSize) {
      const params = {}
      params.page = hiddenDangerCpage || this.hiddenDangerCpage
      params.size = hiddenDangerPageSize || this.hiddenDangerPageSize
      params.checkId = id
      getHiddenDangerList(params)
        .then(res => {
          const pageObj = res.data.obj
          this.hiddenDangerTotal = pageObj.total
          const list = pageObj.list
          zhClassify(list, [['排查领域', 'realm']])
          this.hiddenDangerTable = list
          this.hiddenDangerLoading = false
        }).catch(() => {})
    },
    // 折叠面板每次只能展开一行
    expandChange(row, expandedRows) {
      console.log(row, expandedRows)
      if (expandedRows.length) {
        this.expands = []
        if (row) {
          // 打开当前点击的 详情
          this.expands.push(row.id) // 每次push进去的是每行的ID
          this.hiddenDangerLoading = true
          this.fetchHiddenDangerList(row.id)
        }
      } else {
        this.expands = [] // 默认不展开
      }
    },
    // 重置表单
    handleResetForm(formName) {
      this.resetForm(this, formName)
    },
    // 添加日常登记表按钮
    addDailyForm() {
      this.dailyFormDialog = true
      this.handle = '添加'
      this.$nextTick(() => {
        // 默认表格为空
        this.dailyForm.hiddenDangers = []
        // 默认为第一个选中
        this.dailyForm.radio = 0
      })
    },
    // 提交日常登记表
    dailyFormSubmit() {
      this.$refs.dailyForm.validate(valid => {
        if (valid) {
          const params = this.depClone(this.dailyForm)
          // 改造文件
          params.fileIds = params.attachmentFiles.map(item => {
            return item.fileId
          })
          // 有隐患的情况
          if (this.dailyForm.hiddenDangers && this.dailyForm.hiddenDangers.length > 0) {
            if (this.isMain !== 0 && !this.isMain) {
              console.log(this.isMain)
              this.$message.error('请选择主要隐患')
              return false
            } else {
              // console.log(params)
              // 改造参数
              params.hiddenDangers = params.hiddenDangers.map((item, index) => {
                // 改造主要隐患
                if (this.isMain === index) {
                  item.isMain = '是'
                } else {
                  item.isMain = '否'
                }
                // 改造文件id列表
                item.attachmentFileIds = item.files.map(file => {
                  return file.fileId
                })
                return item
              })
            }
          }
          this.btnLoading = true
          if (this.handle === '添加') {
            console.log(params)
            addSafetyCheck(params).then(res => {
              this.btnLoading = false
              this.dailyFormDialog = false
              this.fetchSafetyCheckList()
            })
          } else if (this.handle === '修改') {
            updateSafetyCheck(params.id, params).then(res => {
              this.btnLoading = false
              this.dailyFormDialog = false
              this.fetchSafetyCheckList()
            })
          }
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    // 添加隐患表按钮
    addDangerForm(props) {
      this.handle = '添加'
      this.dangerFormDialog = true
      this.$nextTick(() => {
        this.dangerForm.checkId = props.row.id
      })
      console.log(props)
    },
    // 添加隐患
    addDangerItem() {
      this.$refs.dangerForm.validate(valid => {
        if (valid) {
          this.btnLoading = true
          const params = this.depClone(this.dangerForm)
          params.attachmentFileIds = params.files.map(item => {
            return item.fileId
          })
          addHiddenDanger(params).then(res => {
            this.btnLoading = false
            this.fetchHiddenDangerList(params.checkId)
            this.dangerFormDialog = false
          })
        } else {
          return false
        }
      })
    },
    // 删除隐患登记
    delDangerItem(scope) {
      this.handleCofirm('你确定要删除么？', 'warning').then(() => {
        deleteSafetyCheck(scope.row.id).then(res => {
          this.fetchSafetyCheckList()
        })
      })
    },
    // 页码变换
    handleSizeChange(val) {
      this.fetchSafetyCheckList()
    },
    handleCurrentChange(val) {
      this.fetchSafetyCheckList()
    },
    handleHiddenDangerSizeChange() {
      this.fetchHiddenDangerList()
    },
    handleHiddenDangerCurrentChange() {
      this.fetchHiddenDangerList()
    },

    // 编辑单行表格
    editItem(scope) {
      this.dailyFormDialog = true
      this.handle = '修改'
      this.$nextTick(() => {
        this.dailyForm = { ...scope.row }
      })

      console.log(scope)
    },
    // 删除
    delItem(scope) {
      this.handleCofirm('你确定要删除么？', 'warning').then(() => {
        deleteSafetyCheck(scope.row.id).then(res => {
          this.fetchSafetyCheckList()
        })
      })
    },
    // 查看历史修改
    history(scope) {
      historySafetyCheck(scope.row.id).then((res) => {
        this.historyTable = res.data.obj
        this.historyTable = this.historyTable.map((item) => {
          // 改造
          item.updateTime = this.parseTime(item.updateTime, '{y}-{m}-{d}')
          return item
        })
        this.historyDialog = true
      })
    },
    // 整改
    handleState(scope) {
      this.handle = '添加'
      const id = scope.row.id
      const state = scope.row.state
      if (state === 1) {
        this.rectificationFormDialog = true
        this.$nextTick(() => {
          this.rectificationForm.state = state
          this.rectificationForm.id = id
        })
      } else if (state === 2) {
        this.completeTimeFormDialog = true
        this.$nextTick(() => {
          this.completeTimeForm.state = state
          this.completeTimeForm.id = id
        })
      } else if (state === 3) {
        this.acceptanceFormDialog = true
        this.$nextTick(() => {
          this.acceptanceForm.state = state
          this.acceptanceForm.id = id
        })
      }
    },
    // 状态变换
    stateFormSubmit(formName) {
      this.$refs[formName].validate(valid => {
        if (valid) {
          const params = this.depClone(this[formName])
          // 改造文件
          this.btnLoading = true
          const id = params.id
          const state = params.state
          if (state === 1) {
            params.rectificationPlanFileIds = params.rectificationPlanFiles.map(item => {
              return item.fileId
            })

            updateState2(id, params).then(res => {
              this.btnLoading = false
              this.rectificationFormDialog = false
              this.fetchSafetyCheckList()
            })
          } else if (state === 2) {
            updateState3(id, params).then(res => {
              this.btnLoading = false
              this.completeTimeFormDialog = false
              this.fetchSafetyCheckList()
            })
          } else if (state === 3) {
            updateState4(id, params).then(res => {
              this.btnLoading = false
              this.acceptanceFormDialog = false
              this.fetchSafetyCheckList()
            })
          }
          console.log(this.expands)
        } else {
          console.log('error submit!!')
          return false
        }
      })
    }
  }
}
</script>

<style lang="scss" scoped>
//嵌套表单输入框的表格
.formTable{
  width: 100%;
  border-collapse: collapse;
  border: 1px solid #ebeef5;
  tr{
      &:nth-child(even){
        background-color: #fafafa;
      }
      &:last-of-type{
        background-color: #fff;
        td{
          padding-right: 0;
          text-align: center
        }
        .el-button{
          padding-left: 60px;
          padding-right: 60px;
        }
      }
    td{
      padding: 10px 0;
      padding-right: 20%;
      vertical-align: middle;
      /deep/ .el-form-item--mini.el-form-item,.el-form-item--small.el-form-item{
        margin-bottom: 0 ;
      }
      /deep/ .el-upload--picture-card{
          line-height: normal;
        i{
          font-size: 67px;
          color: #c0c4cc;
          margin: 40px 0 16px;
          line-height: 50px;
        }
        .el-upload__text{
          color: #606266;
          font-size: 14px;
          text-align: center;
          line-height: normal;
        }

      }
    }
  }
}

.header-label{
    display: inline-block;
    line-height: 1;
    white-space: nowrap;
    background: #fff;
    border: 1px solid #dcdfe6;
    color: #606266;
    text-align: center;
    box-sizing: border-box;
    outline: none;
    margin: 0;
    font-weight: 500;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    padding: 9px 0;
    width: 88px;
    text-align: center;
    border-radius: 3px;
}

</style>
