<template>
  <div class="app-container">
    <div class="panel">
      <div class="panel-title">
        <breadcrumb class="breadcrumb-container" />
      </div>
      <el-row type="flex" justify="space-between" align="top">

        <el-button
          type="primary"
          size="small"
          icon="el-icon-plus"
          @click="addform($event,dialogClosed)"
        >
          新增
        </el-button>

        <div>
          <el-autocomplete
            v-model="searchTemp"
            size="small"
            :fetch-suggestions="querySearch"
            placeholder="请输入内容"
            style="width:180px;margin-right:10px"
            :trigger-on-focus="false"
            @select="handleSelect"
          />

          <el-button type="primary" icon="el-icon-search" size="small" @click="onSearch">查询</el-button>
        </div>
      </el-row>
      <el-row>
        <el-col>

          <el-table
            ref="table"
            v-loading="tableDataLoading"
            border
            :data="tableData"
            size="small"
            stripe
          >
            <!-- 详情展示 -->
            <el-table-column prop="enterpriseName" label="企业名称" width="250" />
            <el-table-column prop="title" label="文件标题" />
            <el-table-column prop="zh-type" label="适用领域" />
            <el-table-column prop="startDate" label="编制日期">
              <template slot-scope="scope">
                {{ scope.row.startDate | dateFormat('YYYY-MM-DD') }}
              </template>
            </el-table-column>
            <el-table-column label="操作" :width="GLOBAL.TABLE_CELL_WIDTH.MEDIUM">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <sun-button :type="'edit'" @click="editItem(scope)" />
                  <sun-button :type="'delete'" @click="delItem(scope)" />
                </el-button-group>
              </template>
            </el-table-column>
            <el-table-column label="历史修改" :width="GLOBAL.TABLE_CELL_WIDTH.MINI">
              <template slot-scope="scope">
                <el-button-group class="operate">
                  <sun-button :type="'history'" @click="history(scope)" />
                </el-button-group>
              </template>
            </el-table-column>
          </el-table>
        </el-col>
      </el-row>
      <!-- 分页栏 -->

      <el-row ref="page">
        <!-- 分页栏 -->
        <el-pagination
          :current-page.sync="cpage"
          :page-sizes="[5, 10, 15, 20]"
          :page-size.sync="pageSize"
          layout="sizes, prev, pager, next"
          :total="total"
          @size-change="handlePageSizeChange"
          @current-change="handleCpageChange"
        />
      </el-row>
      <!-- 弹出添加窗口 -->

      <!-- 登记表 -->
      <el-dialog
        :title="handle "
        :visible.sync="formDialog"
        :width="GLOBAL.DIALOG_WIDTH.MINI"
        :close-on-click-modal="false"
        @closed="handleDialogClosed('form')"
      >

        <el-form
          id="addData"
          ref="form"
          size="small"
          :model="form"
          :rules="formRules"
          :label-width="GLOBAL.FORM_LABEL_WIDTH.MEDIUM"
        >

          <el-form-item label="文件标题" prop="title">
            <el-input v-model="form.title" />
          </el-form-item>

          <el-form-item label="适用领域" prop="type">
            <sun-select v-model="form.type" :module="'适用领域'" />
          </el-form-item>

          <el-form-item label="编制日期" prop="startDate">
            <el-date-picker
              v-model="form.startDate"
              type="date"
              placeholder="选择日期"
              format="yyyy-MM-dd"
              value-format="timestamp"
            />
          </el-form-item>

          <el-form-item label="附件" prop="files">
            <sun-upload
              ref="UPLOAD"
              :data="GLOBAL.FILE_TYPE.RULES"
              :file-list.sync="form.files"
              :limit="1"
              :btn-loading.sync="btnLoading"
            />
          </el-form-item>

        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button @click="handleDialogClosed('form')">取 消</el-button>
          <el-button type="primary" :loading="btnLoading" @click="formSubmit">{{ handle }}</el-button>
        </div>
      </el-dialog>
    </div>

    <!-- 用于查看历史记录的dialog -->
    <el-dialog
      title="历史记录"
      :visible.sync="historyDialog"
      :close-on-click-modal="false"
      :width="GLOBAL.DIALOG_WIDTH.BIG"
    >
      <el-table ref="table" border :data="historyTable" size="small" stripe>
        <!-- 历史记录详情展示 -->
        <el-table-column prop="enterpriseName" label="企业名称" width="250" />
        <el-table-column prop="title" label="文件标题" />
        <el-table-column prop="zh-type" label="适用领域" />
        <el-table-column prop="startDate" label="编制日期" />
        <el-table-column prop="operatorName" label="操作人" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL" />
        <el-table-column label="操作时间" :width="GLOBAL.TABLE_CELL_WIDTH.SMALL">
          <template slot-scope="scope">
            {{ scope.row.updateTime | dateFormat('YYYY-MM-DD') }}
          </template>
        </el-table-column>
      </el-table>
    </el-dialog>
  </div>
</template>

<script>
import { zhClassify } from '@/utils'
import {
  getCheckRulesList,
  addCheckRules,
  updateCheckRules,
  deleteCheckRules,
  historyCheckRules
} from '@/api/laws/safetyChecklist' // 法律法规API
export default {
  data() {
    return {
      tableDataLoading: true,
      form: {
        title: '',
        type: '', // 适用领域分类
        startDate: '', // 编制日期
        files: []
      },
      btnLoading: false,
      // 验证规则
      formRules: {
        type: [
          { required: true, message: '请选择适用领域分类', trigger: 'change' }
        ],
        title: [
          { required: true, message: '请输入标题', trigger: 'blur' }
        ],
        startDate: [
          { required: true, message: '请选择编制日期', trigger: 'change' }
        ],
        files: [
          { required: true, message: '请选择文件', trigger: 'change' }
        ]
      },
      formDialog: false, // 弹出框标志
      table: [],
      cpage: 1,
      pageSize: 5,
      total: 0,
      historyDialog: false,
      historyTable: [] // 历史记录
    }
  },
  computed: {
    tableData() {
      const search = this.search
      return this.fuzzySearch(this.table, search, 'title')
    },
    queryList() {
      return this.table.map(data => {
        return { value: data.title }
      })
    }
  },
  created() {
    this.fetchList()
  },
  methods: {
    // 动态分页查询企业资质信息
    fetchList(cpage, pageSize) {
      this.tableDataLoading = true
      const params = {}
      params.page = cpage || this.cpage
      params.size = pageSize || this.pageSize
      // params.rule_type = 201
      getCheckRulesList(params)
        .then(res => {
          const pageObj = res.data.obj
          this.total = pageObj.total
          const list = pageObj.list
          zhClassify(list, [['适用领域', 'type']])
          console.log(list)
          this.table = list
          this.tableDataLoading = false
          this.btnLoading = false
        }).catch(() => {})
    },
    // 提交登记表
    formSubmit() {
      this.$refs.form.validate(async(valid) => {
        if (valid) {
          this.btnLoading = true

          const params = this.depClone(this.form)

          // 改造文件
          params.attachments = params.files[0].fileId

          if (this.handle === '添加') {
            await addCheckRules(params)
          } else if (this.handle === '修改') {
            await updateCheckRules(params.id, params)
          }
          this.formDialog = false
          this.fetchList()
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    // 删除
    delItem(scope) {
      this.handleCofirm('你确定要删除么？', 'warning')
        .then(() => {
          deleteCheckRules(scope.row.id).then((res) => {
            this.fetchList()
          })
        })
    },
    // 查看历史修改
    history(scope) {
      historyCheckRules(scope.row.id).then((res) => {
        this.historyTable = res.data.obj
        zhClassify(this.historyTable, [['适用领域', 'type']])
        this.historyDialog = true
      })
    }
  }
}
</script>

<style lang="scss" scoped>
</style>
