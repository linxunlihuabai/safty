<template>
  <!-- 矿山登记 -->
  <div class="app-container">
    <div class="panel">
      <div class="panel-title">
        <breadcrumb class="breadcrumb-container" />
      </div>
      <el-tabs v-model="activeName" :before-leave="handleLeave">
        <el-tab-pane
          v-for="(item,index) in tabsData"
          :key="index"
          :label="item.name"
          :name="item.name"
        >
          <el-row type="flex" justify="space-between" align="top">

            <el-button
              type="primary"
              size="small"
              icon="el-icon-plus"
              @click="addDailyForm"
            >
              新增
            </el-button>

            <div>
              <el-autocomplete
                v-model="searchTemp"
                size="small"
                :fetch-suggestions="querySearch"
                placeholder="请输入内容"
                style="width:160px;margin-right:10px"
                :trigger-on-focus="false"
                @select="handleSelect"
              />

              <el-button type="primary" icon="el-icon-search" size="small" @click="onSearch">查询</el-button>
            </div>
          </el-row>
          <el-row>
            <el-col>
              <el-table ref="table" border :data="tableData" size="small" stripe>
                <!-- 安全费用详情展示 -->
                <el-table-column prop="name" label="名称" />
                <el-table-column prop="mineralSpecies" label="主要矿种" />
                <el-table-column prop="miningTime" label="投产时间" />
                <el-table-column prop="miningLicenseNo" label="采矿许可证号" />
                <el-table-column label="采矿许可证有效期">
                  <template slot-scope="scope">
                    <span>{{ scope.row.licenseStart }}</span>
                    <i class="el-icon-minus" />
                    <span>{{ scope.row.licenseEnd }}</span>
                  </template>
                </el-table-column>
                <el-table-column label="GPS坐标">
                  <template slot-scope="scope">
                    <span>经度:{{ scope.row.gpsLng }}</span>
                    <i class="el-icon-minus" />
                    <span>纬度:{{ scope.row.gpsLat }}</span>
                  </template>
                </el-table-column>
                <el-table-column label="操作" width="120">
                  <template slot-scope="scope">
                    <el-button-group class="operate">
                      <el-button type="text" size="mini" title="编辑" icon="el-icon-edit" @click="editItem(scope)" />
                      <el-button type="text" size="mini" title="删除" icon="el-icon-delete" @click="delItem(scope)" />
                    </el-button-group>
                  </template>
                </el-table-column>
                <el-table-column label="历史修改" width="80">
                  <template slot-scope="scope">
                    <el-button-group class="operate">
                      <el-button
                        type="text"
                        size="mini"
                        icon="el-icon-view"
                        @click="history(scope)"
                      />
                    </el-button-group>
                  </template>
                </el-table-column>
              </el-table>
            </el-col>
          </el-row>
          <!-- 分页栏 -->

          <el-row ref="page">
            <el-pagination
              :current-page.sync="cpage"
              :page-sizes="[5, 10, 15, 20]"
              :page-size.sync="pageSize"
              layout="sizes, prev, pager, next"
              :total="total"
              @size-change="handleSizeChange"
              @current-change="handleCurrentChange"
            />
          </el-row>

          <!-- <baidu-map
            :center="{lng: 116.404, lat: 39.915}"
            :zoom="1"
            style="width: 100%;height:300px;"
            :scroll-wheel-zoom="true"
          >
            <bm-marker :position="{lng: 116.404, lat: 39.915}">
              <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
            </bm-marker>
            <bm-marker :position="{lng: 106.653298, lat: 29.732213}">
              <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
            </bm-marker>
            <bm-marker :position="{lng: 115.807698, lat: 28.662684}">
              <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
            </bm-marker>
            <bm-marker :position="{lng: 111.716982, lat: 40.890667}">
              <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
            </bm-marker>
          </baidu-map> -->
        </el-tab-pane>
      </el-tabs>
      <!-- 百度地图 -->
      <baidu-map
        :center="{lng: 116.404, lat: 39.915}"
        :zoom="1"
        style="width: 100%;height:300px;"
        :scroll-wheel-zoom="true"
      >
        <bm-marker :position="{lng: 116.404, lat: 39.915}">
          <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
        </bm-marker>
        <bm-marker :position="{lng: 106.653298, lat: 29.732213}">
          <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
        </bm-marker>
        <bm-marker :position="{lng: 115.807698, lat: 28.662684}">
          <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
        </bm-marker>
        <bm-marker :position="{lng: 111.716982, lat: 40.890667}">
          <bm-label content="我爱北京天安门" :offset="GLOBAL.BMAP_LABEL_OFFSET" />
        </bm-marker>
      </baidu-map>

    </div>

    <!-- 地下矿山窗口 -->
    <el-dialog
      title="登记表"
      :visible.sync="UnderMineFormDialog"
      width="60%"
      :close-on-click-modal="false"
      @closed="handleDialogClosed('UnderMineForm')"
    >
      <!-- 地下矿山登记表 -->
      <el-form
        ref="UnderMineForm"
        size="small"
        :model="UnderMineForm"
        :rules="UMFRules"
        label-width="160px"
      >
        <el-form-item label="矿山名称" prop="name">
          <el-input v-model="UnderMineForm.name" />
        </el-form-item>
        <el-form-item label="主要矿种" prop="type">
          <el-input v-model="UnderMineForm.type" />
          <sun-select :module="'矿种'" :value.sync="UnderMineForm.type" />
        </el-form-item>
        <el-form-item label="投产时间" prop="time">
          <el-date-picker
            v-model="UnderMineForm.time"
            type="date"
            value-format="yyyy-MM-dd"
            placeholder="选择日期"
          />
        </el-form-item>

        <el-form-item label="采矿许可证号" prop="licence">
          <el-input v-model="UnderMineForm.licence" />
        </el-form-item>

        <el-form-item label="GPS坐标" required>
          <el-col :span="11">
            <el-form-item prop="longitude">
              <el-input v-model="UnderMineForm.longitude" placeholder="经度" />
            </el-form-item>
          </el-col>
          <el-col class="line" :span="2">-</el-col>
          <el-col :span="11">
            <el-form-item prop="latitude">
              <el-input v-model="UnderMineForm.latitude" placeholder="纬度" />
            </el-form-item>
          </el-col>
        </el-form-item>

        <el-form-item label="采矿许可证有效期" prop="termOfValidity">

          <el-date-picker
            v-model="UnderMineForm.termOfValidity"
            type="daterange"
            value-format="yyyy-MM-dd"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
          />
        </el-form-item>
      </el-form>

      <div slot="footer" class="dialog-footer">
        <el-button @click="handleDialogClosed('UnderMineForm')">取 消</el-button>
        <el-button type="primary" :loading="btnLoading" @click="formSubmit('UnderMineForm')">{{ handle }}</el-button>
      </div>
    </el-dialog>

    <!-- 尾矿库窗口 -->
    <el-dialog
      title="登记表"
      :visible.sync="TailingsPondFormDialog"
      width="60%"
      :close-on-click-modal="false"
      @closed="handleDialogClosed('TailingsPondForm')"
    >

      <!-- 尾矿库登记表 -->
      <el-form
        ref="TailingsPondForm"
        size="small"
        :model="TailingsPondForm"
        :rules="TPFRules"
        label-width="160px"
      >

        <el-form-item label="尾矿库名称" prop="name">
          <el-input v-model="TailingsPondForm.name" />
        </el-form-item>

        <el-form-item label="尾矿库等别" prop="type">
          <el-input v-model="TailingsPondForm.type" />
        </el-form-item>

        <el-form-item label="直接负责人" prop="responsible">
          <el-input v-model="TailingsPondForm.responsible" />
        </el-form-item>
        <el-form-item label="GPS坐标" required>
          <el-col :span="11">
            <el-form-item prop="longitude">
              <el-input v-model="TailingsPondForm.longitude" placeholder="经度" />
            </el-form-item>
          </el-col>
          <el-col class="line" :span="2">-</el-col>
          <el-col :span="11">
            <el-form-item prop="latitude">
              <el-input v-model="TailingsPondForm.latitude" placeholder="纬度" />
            </el-form-item>
          </el-col>
        </el-form-item>
      </el-form>

      <div slot="footer" class="dialog-footer">
        <el-button @click="handleDialogClosed('TailingsPondForm')">取 消</el-button>
        <el-button type="primary" :loading="btnLoading" @click="formSubmit('TailingsPondForm')">{{ handle }}</el-button>
      </div>
    </el-dialog>

    <!-- 排土场窗口 -->
    <el-dialog
      title="登记表"
      :visible.sync="DumpingSiteFormDialog"
      width="60%"
      :close-on-click-modal="false"
      @closed="handleDialogClosed('DumpingSiteForm')"
    >

      <!-- 排土场登记表 -->
      <el-form
        ref="DumpingSiteForm"
        size="small"
        :model="DumpingSiteForm"
        :rules="DSFRules"
        label-width="160px"
      >

        <el-form-item label="排土场名称" prop="name">
          <el-input v-model="DumpingSiteForm.name" />
        </el-form-item>

        <el-form-item label="地址" prop="name">
          <el-input v-model="DumpingSiteForm.name" />
        </el-form-item>

        <el-form-item label="GPS坐标" prop="miningTime">
          <el-input v-model="DumpingSiteForm.miningTime" />
        </el-form-item>
        <el-form-item label="GPS坐标" required>
          <el-col :span="11">
            <el-form-item prop="longitude">
              <el-input v-model="DumpingSiteForm.longitude" placeholder="经度" />
            </el-form-item>
          </el-col>
          <el-col class="line" :span="2">-</el-col>
          <el-col :span="11">
            <el-form-item prop="latitude">
              <el-input v-model="DumpingSiteForm.latitude" placeholder="纬度" />
            </el-form-item>
          </el-col>
        </el-form-item>
      </el-form>

      <div slot="footer" class="dialog-footer">
        <el-button @click="handleDialogClosed('DumpingSiteForm')">取 消</el-button>
        <el-button type="primary" :loading="btnLoading" @click="formSubmit('DumpingSiteForm')">{{ handle }}</el-button>
      </div>
    </el-dialog>

    <!--露天矿山窗口 -->
    <el-dialog
      title="登记表"
      :visible.sync="OpenMineFormDialog"
      width="60%"
      :close-on-click-modal="false"
      @closed="handleDialogClosed('OpenMineForm')"
    >

      <!-- 露天矿山登记表 -->
      <el-form
        ref="OpenMineForm"
        size="small"
        :model="OpenMineForm"
        :rules="OMFRules"
        label-width="160px"
      >

        <el-form-item label="露天矿山名称" prop="name">
          <el-input v-model="OpenMineForm.name" />
        </el-form-item>

        <el-form-item label="采矿许可证号" prop="licence">
          <el-input v-model="OpenMineForm.licence" />
        </el-form-item>

        <el-form-item label="GPS坐标" required>
          <el-col :span="11">
            <el-form-item prop="longitude">
              <el-input v-model="OpenMineForm.longitude" placeholder="经度" />
            </el-form-item>
          </el-col>
          <el-col class="line" :span="2">-</el-col>
          <el-col :span="11">
            <el-form-item prop="latitude">
              <el-input v-model="OpenMineForm.latitude" placeholder="纬度" />
            </el-form-item>
          </el-col>
        </el-form-item>

        <el-form-item label="采矿许可证有效期" prop="termOfValidity">

          <el-date-picker
            v-model="OpenMineForm.termOfValidity"
            type="daterange"
            value-format="yyyy-MM-dd"
            range-separator="至"
            start-placeholder="开始日期"
            end-placeholder="结束日期"
          />
        </el-form-item>
      </el-form>

      <div slot="footer" class="dialog-footer">
        <el-button @click="handleDialogClosed('OpenMineForm')">取 消</el-button>
        <el-button type="primary" :loading="btnLoading" @click="formSubmit('OpenMineForm')">{{ handle }}</el-button>
      </div>
    </el-dialog>

    <!-- 用于预览上传多张图片的dialog -->
    <el-dialog append-to-body :visible.sync="dialogViewPics" class="ViewPics">
      <el-row :gutter="20" type="flex" justify="center">
        <el-col
          v-for="(item,index) in fileList"
          :key="index"
          :span="8"
        >
          <el-image
            style="width:100%"
            :src="item.url"
          />
        </el-col>
      </el-row>
    </el-dialog>
  </div>
</template>

<script>
import { depClone, fuzzySearch } from '@/utils/auth'
import {
  getMineList,
  addMine,
  updateMine,
  deleteMine,
  historyMine
} from '@/api/basedata/mineRegistration' // 矿山API
// import {
//   getTailingReservoirsList,
//   addMine,
//   updateMine,
//   deleteMine,
//   historyMine
// } from '@/api/basedata/mineRegistration' // 尾矿库API
export default {
  data() {
    return {
      handle: '', // 处理方式
      search: '',
      searchTemp: '',
      activeName: '地下矿山',
      tabsData: [
        {
          name: '地下矿山'
        },
        {
          name: '尾矿库'
        },
        {
          name: '排土场'
        },
        {
          name: '露天矿山'
        }
      ],
      UnderMineFormDialog: false,
      // 地下矿山登记表
      UnderMineForm: {
        name: '',
        type: '',
        time: '',
        licence: '', // 许可证
        longitude: null, // 经度
        latitude: null, // 纬度
        termOfValidity: '' // 有效期
      },
      TailingsPondFormDialog: false,
      // 尾矿库登记表
      TailingsPondForm: {
        name: '',
        type: '',
        responsible: '', // 直接负责人
        longitude: null, // 经度
        latitude: null // 纬度
      },
      DumpingSiteFormDialog: false,
      // 排土场登记表
      DumpingSiteForm: {
        name: '',
        name: '',
        longitude: null, // 经度
        latitude: null // 纬度
      },
      OpenMineFormDialog: false,
      // 露天矿山登记表
      OpenMineForm: {
        name: '',
        licence: '', // 许可证
        longitude: null, // 经度
        latitude: null, // 纬度
        termOfValidity: '' // 有效期
      },
      // 地下矿山登记表验证规则
      UMFRules: {
        name: [
          { required: true, message: '请输入矿山名称', trigger: 'blur' }
        ],
        type: [
          { required: true, message: '请输入主要矿种', trigger: 'blur' }
        ],
        time: [
          { required: true, message: '请选择投产时间', trigger: 'change' }
        ],
        licence: [
          { required: true, message: '请输入采矿许可证号', trigger: 'blur' }
        ],
        longitude: [
          { required: true, message: '请输入经度', trigger: 'blur' }
        ],
        latitude: [
          { required: true, message: '请输入纬度', trigger: 'blur' }
        ],
        termOfValidity: [
          { required: true, message: '请选择有效期', trigger: 'change' }
        ]
      },
      // 尾矿库登记表验证规则
      TPFRules: {
        name: [
          { required: true, message: '请输入尾矿库名称', trigger: 'blur' }
        ],
        type: [
          { required: true, message: '请输入尾矿库等别', trigger: 'blur' }
        ],
        responsible: [
          { required: true, message: '请输入直接负责人', trigger: 'blur' }
        ],
        longitude: [
          { required: true, message: '请输入经度', trigger: 'blur' }
        ],
        latitude: [
          { required: true, message: '请输入纬度', trigger: 'blur' }
        ]
      },
      // 排土场登记表验证规则
      DSFRules: {
        name: [
          { required: true, message: '请输入排土场名称', trigger: 'blur' }
        ],
        name: [
          { required: true, message: '请输入排土场地址', trigger: 'blur' }
        ],
        longitude: [
          { required: true, message: '请输入经度', trigger: 'blur' }
        ],
        latitude: [
          { required: true, message: '请输入纬度', trigger: 'blur' }
        ]
      },
      // 露天矿山登记表验证规则
      OMFRules: {
        name: [
          { required: true, message: '请输入露天矿山名称', trigger: 'blur' }
        ],
        licence: [
          { required: true, message: '请输入采矿许可证号', trigger: 'blur' }
        ],
        longitude: [
          { required: true, message: '请输入经度', trigger: 'blur' }
        ],
        latitude: [
          { required: true, message: '请输入纬度', trigger: 'blur' }
        ],
        termOfValidity: [
          { required: true, message: '请选择有效期', trigger: 'blur' }
        ]
      },
      table: [],
      dangerTable: [],
      cpage: 1,
      pageSize: 5,
      total: 0,
      // 引入百度地图默认经纬度以及倍数
      zoom: 11,
      show: false,
      fileList: [],
      dialogViewPic: false,
      dialogViewPics: false,
      dialogImageUrl: '',
      btnLoading: false
    }
  },
  computed: {
    tableData() {
      const search = this.search
      return fuzzySearch(this.table, search, 'name')
    },
    queryList() {
      return this.table.map(data => {
        return { value: data.name }
      })
    }
  },
  watch: {
    searchTemp(val) {
      if (!val) {
        this.search = ''
      }
    }
  },
  created() {
    this.fetchMineList()
  },
  methods: {
    // 动态分页查询 [矿山] 列表
    fetchMineList(type, cpage, pageSize) {
      const params = {}
      params.type = type || this.GLOBAL.MINE_TYPE.UNDER.type // 矿山类型
      params.page = cpage || this.cpage
      params.size = pageSize || this.pageSize
      getMineList(params)
        .then(res => {
          this.planLoading = false
          const pageObj = res.data.obj
          console.log(pageObj)
          this.total = pageObj.total

          this.table = pageObj.list
        }).catch(() => {})
    },
    // 过滤表格
    onSearch() {
      this.search = this.searchTemp
    },
    querySearch(queryString, cb) {
      var results = fuzzySearch(this.queryList, queryString, 'value')
      // 调用 callback 返回建议列表的数据
      cb(results)
    },
    handleSelect() {
      this.onSearch()
    },
    // 切换选项卡
    handleLeave(activeName, oldActiveName) {
      if (activeName === '地下矿山') {
        this.fetchMineList(this.GLOBAL.MINE_TYPE.UNDER.type)
      } else if (activeName === '露天矿山') {
        this.fetchMineList(this.GLOBAL.MINE_TYPE.OPEN.type)
      } else if (activeName === '尾矿库') {

      } else if (activeName === '排土场') {

      }
      console.log(activeName, oldActiveName)
    },
    // 查看照片
    viewPics(fileList) {
      this.dialogViewPics = true
      this.fileList = fileList
    },
    // 添加按钮
    addDailyForm() {
      this.formDialog = true
      this.handle = '添加'
      if (this.activeName === '地下矿山') {
        this.UnderMineFormDialog = true
      } else if (this.activeName === '露天矿山') {
        this.OpenMineFormDialog = true
      } else if (this.activeName === '尾矿库') {
        this.TailingsPondFormDialog = true
      } else if (this.activeName === '排土场') {
        this.DumpingSiteFormDialog = true
      }
    },
    // 提交
    formSubmit(formName) {
      this.$refs[formName].validate((valid) => {
        if (valid) {
          const temp = formName + 'Dialog'
          const params = depClone(this[formName])
          if (this.handle === '添加') {
            // if(this.activeName)
            // addMine()
            this[temp] = false
          } else if (this.handle === '修改') {
            this[temp] = false
          }
        } else {
          console.log('error submit!!')
          return false
        }
      })
    },
    // 修改
    editItem(scope) {
      this.formDialog = true
      this.handle = '修改'
      this.form = { ...scope.row }
      console.log(scope)
    },
    // 删除
    delItem(scope) {
      this.handleCofirm('你确定要删除么？', 'warning')
        .then(() => {
          this.tableData.splice(scope.$index, 1)
          console.log(scope.$index)
        })
    },
    // 处理dialog关闭
    handleDialogClosed(formName) {
      const temp = formName + 'Dialog'
      this[temp] = false
      this.$refs[formName].resetFields()
      // this.$refs.UPLOAD.$refs.upload.abort()
      this.btnLoading = false
    },
    // 上传处理
    handleProgress(event, file, fileList) {
      this.btnLoading = true
    },
    handleSuccess(response, file, fileList) {
      this.form.fileList = fileList
      this.btnLoading = false
    },
    handleError(err, file, fileList) {
      this.btnLoading = false
      console.log(err)
    },
    handleRemove(file, fileList) {
      this.form.fileList = fileList
    },
    handlePictureCardPreview(file) {
      this.viewPics([file])
    },
    // 隐患登记表的图片上传处理
    handleDangerFileProgress(event, file, fileList) {
      this.dangerLoading = true
    },
    handleDangerFileSuccess(response, file, fileList) {
      this.dangerForm.fileList = fileList
      this.dangerLoading = false
    },
    handleDangerFileError(err, file, fileList) {
      this.dangerLoading = false
      console.log(err)
    },
    handleDangerFileRemove(file, fileList) {
      this.dangerForm.fileList = fileList
    },
    mapReady({ BMap, map }) {
      map.centerAndZoom(new BMap.Point(104.769128, 34.972443), 5)
      var data_info = this.projectGPSCoordinatesCenter
      var opts = {
        width: 250, // 信息窗口宽度
        height: 60, // 信息窗口高度
        title: '信息窗口', // 信息窗口标题
        enableMessage: true // 设置允许信息窗发送短息
      }
      for (var i = 0; i < data_info.length; i++) {
      // eslint-disable-next-line no-undef
        var marker = new BMap.Marker(
          new BMap.Point(data_info[i][0], data_info[i][1])
        )
        // 创建标注
        var content = data_info[i][2]
        map.addOverlay(marker)
        // 将标注添加到地图中
        addClickHandler(content, marker)
      }
      function addClickHandler(content, marker) {
        marker.addEventListener('click', function(e) {
          openInfo(content, e)
        })
      }
      function openInfo(content, e) {
        var p = e.target
        var point = new BMap.Point(p.getPosition().lng, p.getPosition().lat)
        var infoWindow = new BMap.InfoWindow(content, opts) // 创建信息窗口对象
        map.openInfoWindow(infoWindow, point) // 开启信息窗口
      }
    },
    infoWindowClose() {
      this.show = false
    },
    infoWindowOpen() {
      this.show = true
    },
    // 处理每页条数变化
    handleSizeChange() {
      this.fetchMineList()
    },
    // 处理当前页码变化
    handleCurrentChange() {
      this.fetchMineList()
    }

  }
}
</script>

<style lang="scss" scoped>

.ViewPics{
  /deep/ .el-dialog__body{
    text-align: center
  }
}
</style>
